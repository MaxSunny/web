{"ast":null,"code":"/**\r\n * @fileoverview Rule to flag use of ternary operators.\r\n * @author Ian Christian Myers\r\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\n\nmodule.exports = {\n  meta: {\n    type: \"suggestion\",\n    docs: {\n      description: \"disallow ternary operators\",\n      recommended: false,\n      url: \"https://eslint.org/docs/rules/no-ternary\"\n    },\n    schema: [],\n    messages: {\n      noTernaryOperator: \"Ternary operator used.\"\n    }\n  },\n\n  create(context) {\n    return {\n      ConditionalExpression(node) {\n        context.report({\n          node,\n          messageId: \"noTernaryOperator\"\n        });\n      }\n\n    };\n  }\n\n};","map":{"version":3,"sources":["C:/Users/2928/Desktop/zhuawa/notes/project_demo/react_project/node_modules/eslint/lib/rules/no-ternary.js"],"names":["module","exports","meta","type","docs","description","recommended","url","schema","messages","noTernaryOperator","create","context","ConditionalExpression","node","report","messageId"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,a,CAEA;AACA;AACA;;AAEA;;AACAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE,YADJ;AAGFC,IAAAA,IAAI,EAAE;AACFC,MAAAA,WAAW,EAAE,4BADX;AAEFC,MAAAA,WAAW,EAAE,KAFX;AAGFC,MAAAA,GAAG,EAAE;AAHH,KAHJ;AASFC,IAAAA,MAAM,EAAE,EATN;AAWFC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,iBAAiB,EAAE;AADb;AAXR,GADO;;AAiBbC,EAAAA,MAAM,CAACC,OAAD,EAAU;AAEZ,WAAO;AAEHC,MAAAA,qBAAqB,CAACC,IAAD,EAAO;AACxBF,QAAAA,OAAO,CAACG,MAAR,CAAe;AAAED,UAAAA,IAAF;AAAQE,UAAAA,SAAS,EAAE;AAAnB,SAAf;AACH;;AAJE,KAAP;AAQH;;AA3BY,CAAjB","sourcesContent":["/**\r\n * @fileoverview Rule to flag use of ternary operators.\r\n * @author Ian Christian Myers\r\n */\r\n\r\n\"use strict\";\r\n\r\n//------------------------------------------------------------------------------\r\n// Rule Definition\r\n//------------------------------------------------------------------------------\r\n\r\n/** @type {import('../shared/types').Rule} */\r\nmodule.exports = {\r\n    meta: {\r\n        type: \"suggestion\",\r\n\r\n        docs: {\r\n            description: \"disallow ternary operators\",\r\n            recommended: false,\r\n            url: \"https://eslint.org/docs/rules/no-ternary\"\r\n        },\r\n\r\n        schema: [],\r\n\r\n        messages: {\r\n            noTernaryOperator: \"Ternary operator used.\"\r\n        }\r\n    },\r\n\r\n    create(context) {\r\n\r\n        return {\r\n\r\n            ConditionalExpression(node) {\r\n                context.report({ node, messageId: \"noTernaryOperator\" });\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}