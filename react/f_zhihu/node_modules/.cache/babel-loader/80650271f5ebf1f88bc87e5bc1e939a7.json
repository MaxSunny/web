{"ast":null,"code":"/**\r\n * @fileoverview Config to enable all rules.\r\n * @author Robert Fletcher\r\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nconst builtInRules = require(\"../lib/rules\"); //------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\n\nconst allRules = {};\n\nfor (const [ruleId, rule] of builtInRules) {\n  if (!rule.meta.deprecated) {\n    allRules[ruleId] = \"error\";\n  }\n} //------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\n/** @type {import(\"../lib/shared/types\").ConfigData} */\n\n\nmodule.exports = {\n  rules: allRules\n};","map":{"version":3,"sources":["C:/Users/2928/Desktop/zhuawa/notes/project_demo/react_project/node_modules/eslint/conf/eslint-all.js"],"names":["builtInRules","require","allRules","ruleId","rule","meta","deprecated","module","exports","rules"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,a,CAEA;AACA;AACA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAAC,cAAD,CAA5B,C,CAEA;AACA;AACA;;;AAEA,MAAMC,QAAQ,GAAG,EAAjB;;AAEA,KAAK,MAAM,CAACC,MAAD,EAASC,IAAT,CAAX,IAA6BJ,YAA7B,EAA2C;AACvC,MAAI,CAACI,IAAI,CAACC,IAAL,CAAUC,UAAf,EAA2B;AACvBJ,IAAAA,QAAQ,CAACC,MAAD,CAAR,GAAmB,OAAnB;AACH;AACJ,C,CAED;AACA;AACA;;AAEA;;;AACAI,MAAM,CAACC,OAAP,GAAiB;AAAEC,EAAAA,KAAK,EAAEP;AAAT,CAAjB","sourcesContent":["/**\r\n * @fileoverview Config to enable all rules.\r\n * @author Robert Fletcher\r\n */\r\n\r\n\"use strict\";\r\n\r\n//------------------------------------------------------------------------------\r\n// Requirements\r\n//------------------------------------------------------------------------------\r\n\r\nconst builtInRules = require(\"../lib/rules\");\r\n\r\n//------------------------------------------------------------------------------\r\n// Helpers\r\n//------------------------------------------------------------------------------\r\n\r\nconst allRules = {};\r\n\r\nfor (const [ruleId, rule] of builtInRules) {\r\n    if (!rule.meta.deprecated) {\r\n        allRules[ruleId] = \"error\";\r\n    }\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Public Interface\r\n//------------------------------------------------------------------------------\r\n\r\n/** @type {import(\"../lib/shared/types\").ConfigData} */\r\nmodule.exports = { rules: allRules };\r\n"]},"metadata":{},"sourceType":"script"}