{"ast":null,"code":"/**\r\n * @fileoverview Rule to flag when using constructor for wrapper objects\r\n * @author Ilya Volodin\r\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\n\nmodule.exports = {\n  meta: {\n    type: \"suggestion\",\n    docs: {\n      description: \"disallow `new` operators with the `String`, `Number`, and `Boolean` objects\",\n      recommended: false,\n      url: \"https://eslint.org/docs/rules/no-new-wrappers\"\n    },\n    schema: [],\n    messages: {\n      noConstructor: \"Do not use {{fn}} as a constructor.\"\n    }\n  },\n\n  create(context) {\n    return {\n      NewExpression(node) {\n        const wrapperObjects = [\"String\", \"Number\", \"Boolean\"];\n\n        if (wrapperObjects.indexOf(node.callee.name) > -1) {\n          context.report({\n            node,\n            messageId: \"noConstructor\",\n            data: {\n              fn: node.callee.name\n            }\n          });\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"sources":["C:/Users/2928/Desktop/zhuawa/notes/project_demo/react_project/node_modules/eslint/lib/rules/no-new-wrappers.js"],"names":["module","exports","meta","type","docs","description","recommended","url","schema","messages","noConstructor","create","context","NewExpression","node","wrapperObjects","indexOf","callee","name","report","messageId","data","fn"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,a,CAEA;AACA;AACA;;AAEA;;AACAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE,YADJ;AAGFC,IAAAA,IAAI,EAAE;AACFC,MAAAA,WAAW,EAAE,6EADX;AAEFC,MAAAA,WAAW,EAAE,KAFX;AAGFC,MAAAA,GAAG,EAAE;AAHH,KAHJ;AASFC,IAAAA,MAAM,EAAE,EATN;AAWFC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,aAAa,EAAE;AADT;AAXR,GADO;;AAiBbC,EAAAA,MAAM,CAACC,OAAD,EAAU;AAEZ,WAAO;AAEHC,MAAAA,aAAa,CAACC,IAAD,EAAO;AAChB,cAAMC,cAAc,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,CAAvB;;AAEA,YAAIA,cAAc,CAACC,OAAf,CAAuBF,IAAI,CAACG,MAAL,CAAYC,IAAnC,IAA2C,CAAC,CAAhD,EAAmD;AAC/CN,UAAAA,OAAO,CAACO,MAAR,CAAe;AACXL,YAAAA,IADW;AAEXM,YAAAA,SAAS,EAAE,eAFA;AAGXC,YAAAA,IAAI,EAAE;AAAEC,cAAAA,EAAE,EAAER,IAAI,CAACG,MAAL,CAAYC;AAAlB;AAHK,WAAf;AAKH;AACJ;;AAZE,KAAP;AAeH;;AAlCY,CAAjB","sourcesContent":["/**\r\n * @fileoverview Rule to flag when using constructor for wrapper objects\r\n * @author Ilya Volodin\r\n */\r\n\r\n\"use strict\";\r\n\r\n//------------------------------------------------------------------------------\r\n// Rule Definition\r\n//------------------------------------------------------------------------------\r\n\r\n/** @type {import('../shared/types').Rule} */\r\nmodule.exports = {\r\n    meta: {\r\n        type: \"suggestion\",\r\n\r\n        docs: {\r\n            description: \"disallow `new` operators with the `String`, `Number`, and `Boolean` objects\",\r\n            recommended: false,\r\n            url: \"https://eslint.org/docs/rules/no-new-wrappers\"\r\n        },\r\n\r\n        schema: [],\r\n\r\n        messages: {\r\n            noConstructor: \"Do not use {{fn}} as a constructor.\"\r\n        }\r\n    },\r\n\r\n    create(context) {\r\n\r\n        return {\r\n\r\n            NewExpression(node) {\r\n                const wrapperObjects = [\"String\", \"Number\", \"Boolean\"];\r\n\r\n                if (wrapperObjects.indexOf(node.callee.name) > -1) {\r\n                    context.report({\r\n                        node,\r\n                        messageId: \"noConstructor\",\r\n                        data: { fn: node.callee.name }\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}