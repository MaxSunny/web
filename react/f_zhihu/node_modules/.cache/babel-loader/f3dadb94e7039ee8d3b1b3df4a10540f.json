{"ast":null,"code":"/**\r\n * @fileoverview Rule to disallow use of the new operator with the `Symbol` object\r\n * @author Alberto Rodríguez\r\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\n\nmodule.exports = {\n  meta: {\n    type: \"problem\",\n    docs: {\n      description: \"disallow `new` operators with the `Symbol` object\",\n      recommended: true,\n      url: \"https://eslint.org/docs/rules/no-new-symbol\"\n    },\n    schema: [],\n    messages: {\n      noNewSymbol: \"`Symbol` cannot be called as a constructor.\"\n    }\n  },\n\n  create(context) {\n    return {\n      \"Program:exit\"() {\n        const globalScope = context.getScope();\n        const variable = globalScope.set.get(\"Symbol\");\n\n        if (variable && variable.defs.length === 0) {\n          variable.references.forEach(ref => {\n            const node = ref.identifier;\n            const parent = node.parent;\n\n            if (parent && parent.type === \"NewExpression\" && parent.callee === node) {\n              context.report({\n                node,\n                messageId: \"noNewSymbol\"\n              });\n            }\n          });\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"sources":["C:/Users/2928/Desktop/zhuawa/notes/project_demo/react_project/node_modules/eslint/lib/rules/no-new-symbol.js"],"names":["module","exports","meta","type","docs","description","recommended","url","schema","messages","noNewSymbol","create","context","globalScope","getScope","variable","set","get","defs","length","references","forEach","ref","node","identifier","parent","callee","report","messageId"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,a,CAEA;AACA;AACA;;AAEA;;AACAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE,SADJ;AAGFC,IAAAA,IAAI,EAAE;AACFC,MAAAA,WAAW,EAAE,mDADX;AAEFC,MAAAA,WAAW,EAAE,IAFX;AAGFC,MAAAA,GAAG,EAAE;AAHH,KAHJ;AASFC,IAAAA,MAAM,EAAE,EATN;AAWFC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,WAAW,EAAE;AADP;AAXR,GADO;;AAiBbC,EAAAA,MAAM,CAACC,OAAD,EAAU;AAEZ,WAAO;AACH,uBAAiB;AACb,cAAMC,WAAW,GAAGD,OAAO,CAACE,QAAR,EAApB;AACA,cAAMC,QAAQ,GAAGF,WAAW,CAACG,GAAZ,CAAgBC,GAAhB,CAAoB,QAApB,CAAjB;;AAEA,YAAIF,QAAQ,IAAIA,QAAQ,CAACG,IAAT,CAAcC,MAAd,KAAyB,CAAzC,EAA4C;AACxCJ,UAAAA,QAAQ,CAACK,UAAT,CAAoBC,OAApB,CAA4BC,GAAG,IAAI;AAC/B,kBAAMC,IAAI,GAAGD,GAAG,CAACE,UAAjB;AACA,kBAAMC,MAAM,GAAGF,IAAI,CAACE,MAApB;;AAEA,gBAAIA,MAAM,IAAIA,MAAM,CAACtB,IAAP,KAAgB,eAA1B,IAA6CsB,MAAM,CAACC,MAAP,KAAkBH,IAAnE,EAAyE;AACrEX,cAAAA,OAAO,CAACe,MAAR,CAAe;AACXJ,gBAAAA,IADW;AAEXK,gBAAAA,SAAS,EAAE;AAFA,eAAf;AAIH;AACJ,WAVD;AAWH;AACJ;;AAlBE,KAAP;AAqBH;;AAxCY,CAAjB","sourcesContent":["/**\r\n * @fileoverview Rule to disallow use of the new operator with the `Symbol` object\r\n * @author Alberto Rodríguez\r\n */\r\n\r\n\"use strict\";\r\n\r\n//------------------------------------------------------------------------------\r\n// Rule Definition\r\n//------------------------------------------------------------------------------\r\n\r\n/** @type {import('../shared/types').Rule} */\r\nmodule.exports = {\r\n    meta: {\r\n        type: \"problem\",\r\n\r\n        docs: {\r\n            description: \"disallow `new` operators with the `Symbol` object\",\r\n            recommended: true,\r\n            url: \"https://eslint.org/docs/rules/no-new-symbol\"\r\n        },\r\n\r\n        schema: [],\r\n\r\n        messages: {\r\n            noNewSymbol: \"`Symbol` cannot be called as a constructor.\"\r\n        }\r\n    },\r\n\r\n    create(context) {\r\n\r\n        return {\r\n            \"Program:exit\"() {\r\n                const globalScope = context.getScope();\r\n                const variable = globalScope.set.get(\"Symbol\");\r\n\r\n                if (variable && variable.defs.length === 0) {\r\n                    variable.references.forEach(ref => {\r\n                        const node = ref.identifier;\r\n                        const parent = node.parent;\r\n\r\n                        if (parent && parent.type === \"NewExpression\" && parent.callee === node) {\r\n                            context.report({\r\n                                node,\r\n                                messageId: \"noNewSymbol\"\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}