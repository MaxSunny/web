{"ast":null,"code":"/**\r\n * @fileoverview A rule to disallow negated left operands of the `in` operator\r\n * @author Michael Ficarra\r\n * @deprecated in ESLint v3.3.0\r\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\n\nmodule.exports = {\n  meta: {\n    type: \"problem\",\n    docs: {\n      description: \"disallow negating the left operand in `in` expressions\",\n      recommended: false,\n      url: \"https://eslint.org/docs/rules/no-negated-in-lhs\"\n    },\n    replacedBy: [\"no-unsafe-negation\"],\n    deprecated: true,\n    schema: [],\n    messages: {\n      negatedLHS: \"The 'in' expression's left operand is negated.\"\n    }\n  },\n\n  create(context) {\n    return {\n      BinaryExpression(node) {\n        if (node.operator === \"in\" && node.left.type === \"UnaryExpression\" && node.left.operator === \"!\") {\n          context.report({\n            node,\n            messageId: \"negatedLHS\"\n          });\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"sources":["C:/Users/2928/Desktop/zhuawa/notes/project_demo/react_project/node_modules/eslint/lib/rules/no-negated-in-lhs.js"],"names":["module","exports","meta","type","docs","description","recommended","url","replacedBy","deprecated","schema","messages","negatedLHS","create","context","BinaryExpression","node","operator","left","report","messageId"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA,a,CAEA;AACA;AACA;;AAEA;;AACAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE,SADJ;AAGFC,IAAAA,IAAI,EAAE;AACFC,MAAAA,WAAW,EAAE,wDADX;AAEFC,MAAAA,WAAW,EAAE,KAFX;AAGFC,MAAAA,GAAG,EAAE;AAHH,KAHJ;AASFC,IAAAA,UAAU,EAAE,CAAC,oBAAD,CATV;AAWFC,IAAAA,UAAU,EAAE,IAXV;AAYFC,IAAAA,MAAM,EAAE,EAZN;AAcFC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,UAAU,EAAE;AADN;AAdR,GADO;;AAoBbC,EAAAA,MAAM,CAACC,OAAD,EAAU;AAEZ,WAAO;AAEHC,MAAAA,gBAAgB,CAACC,IAAD,EAAO;AACnB,YAAIA,IAAI,CAACC,QAAL,KAAkB,IAAlB,IAA0BD,IAAI,CAACE,IAAL,CAAUf,IAAV,KAAmB,iBAA7C,IAAkEa,IAAI,CAACE,IAAL,CAAUD,QAAV,KAAuB,GAA7F,EAAkG;AAC9FH,UAAAA,OAAO,CAACK,MAAR,CAAe;AAAEH,YAAAA,IAAF;AAAQI,YAAAA,SAAS,EAAE;AAAnB,WAAf;AACH;AACJ;;AANE,KAAP;AASH;;AA/BY,CAAjB","sourcesContent":["/**\r\n * @fileoverview A rule to disallow negated left operands of the `in` operator\r\n * @author Michael Ficarra\r\n * @deprecated in ESLint v3.3.0\r\n */\r\n\r\n\"use strict\";\r\n\r\n//------------------------------------------------------------------------------\r\n// Rule Definition\r\n//------------------------------------------------------------------------------\r\n\r\n/** @type {import('../shared/types').Rule} */\r\nmodule.exports = {\r\n    meta: {\r\n        type: \"problem\",\r\n\r\n        docs: {\r\n            description: \"disallow negating the left operand in `in` expressions\",\r\n            recommended: false,\r\n            url: \"https://eslint.org/docs/rules/no-negated-in-lhs\"\r\n        },\r\n\r\n        replacedBy: [\"no-unsafe-negation\"],\r\n\r\n        deprecated: true,\r\n        schema: [],\r\n\r\n        messages: {\r\n            negatedLHS: \"The 'in' expression's left operand is negated.\"\r\n        }\r\n    },\r\n\r\n    create(context) {\r\n\r\n        return {\r\n\r\n            BinaryExpression(node) {\r\n                if (node.operator === \"in\" && node.left.type === \"UnaryExpression\" && node.left.operator === \"!\") {\r\n                    context.report({ node, messageId: \"negatedLHS\" });\r\n                }\r\n            }\r\n        };\r\n\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}