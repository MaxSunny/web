{"ast":null,"code":"/**\r\n * @fileoverview Interpolate keys from an object into a string with {{ }} markers.\r\n * @author Jed Fox\r\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\nmodule.exports = (text, data) => {\n  if (!data) {\n    return text;\n  } // Substitution content for any {{ }} markers.\n\n\n  return text.replace(/\\{\\{([^{}]+?)\\}\\}/gu, (fullMatch, termWithWhitespace) => {\n    const term = termWithWhitespace.trim();\n\n    if (term in data) {\n      return data[term];\n    } // Preserve old behavior: If parameter name not provided, don't replace it.\n\n\n    return fullMatch;\n  });\n};","map":{"version":3,"sources":["C:/Users/2928/Desktop/zhuawa/notes/project_demo/react_project/node_modules/eslint/lib/linter/interpolate.js"],"names":["module","exports","text","data","replace","fullMatch","termWithWhitespace","term","trim"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,a,CAEA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC7B,MAAI,CAACA,IAAL,EAAW;AACP,WAAOD,IAAP;AACH,GAH4B,CAK7B;;;AACA,SAAOA,IAAI,CAACE,OAAL,CAAa,qBAAb,EAAoC,CAACC,SAAD,EAAYC,kBAAZ,KAAmC;AAC1E,UAAMC,IAAI,GAAGD,kBAAkB,CAACE,IAAnB,EAAb;;AAEA,QAAID,IAAI,IAAIJ,IAAZ,EAAkB;AACd,aAAOA,IAAI,CAACI,IAAD,CAAX;AACH,KALyE,CAO1E;;;AACA,WAAOF,SAAP;AACH,GATM,CAAP;AAUH,CAhBD","sourcesContent":["/**\r\n * @fileoverview Interpolate keys from an object into a string with {{ }} markers.\r\n * @author Jed Fox\r\n */\r\n\r\n\"use strict\";\r\n\r\n//------------------------------------------------------------------------------\r\n// Public Interface\r\n//------------------------------------------------------------------------------\r\n\r\nmodule.exports = (text, data) => {\r\n    if (!data) {\r\n        return text;\r\n    }\r\n\r\n    // Substitution content for any {{ }} markers.\r\n    return text.replace(/\\{\\{([^{}]+?)\\}\\}/gu, (fullMatch, termWithWhitespace) => {\r\n        const term = termWithWhitespace.trim();\r\n\r\n        if (term in data) {\r\n            return data[term];\r\n        }\r\n\r\n        // Preserve old behavior: If parameter name not provided, don't replace it.\r\n        return fullMatch;\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"script"}