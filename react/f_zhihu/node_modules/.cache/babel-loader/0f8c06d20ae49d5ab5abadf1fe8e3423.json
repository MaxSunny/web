{"ast":null,"code":"/**\r\n * @fileoverview enforce default parameters to be last\r\n * @author Chiawen Chen\r\n */\n\"use strict\";\n/** @type {import('../shared/types').Rule} */\n\nmodule.exports = {\n  meta: {\n    type: \"suggestion\",\n    docs: {\n      description: \"enforce default parameters to be last\",\n      recommended: false,\n      url: \"https://eslint.org/docs/rules/default-param-last\"\n    },\n    schema: [],\n    messages: {\n      shouldBeLast: \"Default parameters should be last.\"\n    }\n  },\n\n  create(context) {\n    /**\r\n     * Handler for function contexts.\r\n     * @param {ASTNode} node function node\r\n     * @returns {void}\r\n     */\n    function handleFunction(node) {\n      let hasSeenPlainParam = false;\n\n      for (let i = node.params.length - 1; i >= 0; i -= 1) {\n        const param = node.params[i];\n\n        if (param.type !== \"AssignmentPattern\" && param.type !== \"RestElement\") {\n          hasSeenPlainParam = true;\n          continue;\n        }\n\n        if (hasSeenPlainParam && param.type === \"AssignmentPattern\") {\n          context.report({\n            node: param,\n            messageId: \"shouldBeLast\"\n          });\n        }\n      }\n    }\n\n    return {\n      FunctionDeclaration: handleFunction,\n      FunctionExpression: handleFunction,\n      ArrowFunctionExpression: handleFunction\n    };\n  }\n\n};","map":{"version":3,"sources":["C:/Users/2928/Desktop/zhuawa/notes/project_demo/react_project/node_modules/eslint/lib/rules/default-param-last.js"],"names":["module","exports","meta","type","docs","description","recommended","url","schema","messages","shouldBeLast","create","context","handleFunction","node","hasSeenPlainParam","i","params","length","param","report","messageId","FunctionDeclaration","FunctionExpression","ArrowFunctionExpression"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;;AACAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE,YADJ;AAGFC,IAAAA,IAAI,EAAE;AACFC,MAAAA,WAAW,EAAE,uCADX;AAEFC,MAAAA,WAAW,EAAE,KAFX;AAGFC,MAAAA,GAAG,EAAE;AAHH,KAHJ;AASFC,IAAAA,MAAM,EAAE,EATN;AAWFC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,YAAY,EAAE;AADR;AAXR,GADO;;AAiBbC,EAAAA,MAAM,CAACC,OAAD,EAAU;AAEZ;AACR;AACA;AACA;AACA;AACQ,aAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC1B,UAAIC,iBAAiB,GAAG,KAAxB;;AAEA,WAAK,IAAIC,CAAC,GAAGF,IAAI,CAACG,MAAL,CAAYC,MAAZ,GAAqB,CAAlC,EAAqCF,CAAC,IAAI,CAA1C,EAA6CA,CAAC,IAAI,CAAlD,EAAqD;AACjD,cAAMG,KAAK,GAAGL,IAAI,CAACG,MAAL,CAAYD,CAAZ,CAAd;;AAEA,YACIG,KAAK,CAAChB,IAAN,KAAe,mBAAf,IACAgB,KAAK,CAAChB,IAAN,KAAe,aAFnB,EAGE;AACEY,UAAAA,iBAAiB,GAAG,IAApB;AACA;AACH;;AAED,YAAIA,iBAAiB,IAAII,KAAK,CAAChB,IAAN,KAAe,mBAAxC,EAA6D;AACzDS,UAAAA,OAAO,CAACQ,MAAR,CAAe;AACXN,YAAAA,IAAI,EAAEK,KADK;AAEXE,YAAAA,SAAS,EAAE;AAFA,WAAf;AAIH;AACJ;AACJ;;AAED,WAAO;AACHC,MAAAA,mBAAmB,EAAET,cADlB;AAEHU,MAAAA,kBAAkB,EAAEV,cAFjB;AAGHW,MAAAA,uBAAuB,EAAEX;AAHtB,KAAP;AAKH;;AApDY,CAAjB","sourcesContent":["/**\r\n * @fileoverview enforce default parameters to be last\r\n * @author Chiawen Chen\r\n */\r\n\r\n\"use strict\";\r\n\r\n/** @type {import('../shared/types').Rule} */\r\nmodule.exports = {\r\n    meta: {\r\n        type: \"suggestion\",\r\n\r\n        docs: {\r\n            description: \"enforce default parameters to be last\",\r\n            recommended: false,\r\n            url: \"https://eslint.org/docs/rules/default-param-last\"\r\n        },\r\n\r\n        schema: [],\r\n\r\n        messages: {\r\n            shouldBeLast: \"Default parameters should be last.\"\r\n        }\r\n    },\r\n\r\n    create(context) {\r\n\r\n        /**\r\n         * Handler for function contexts.\r\n         * @param {ASTNode} node function node\r\n         * @returns {void}\r\n         */\r\n        function handleFunction(node) {\r\n            let hasSeenPlainParam = false;\r\n\r\n            for (let i = node.params.length - 1; i >= 0; i -= 1) {\r\n                const param = node.params[i];\r\n\r\n                if (\r\n                    param.type !== \"AssignmentPattern\" &&\r\n                    param.type !== \"RestElement\"\r\n                ) {\r\n                    hasSeenPlainParam = true;\r\n                    continue;\r\n                }\r\n\r\n                if (hasSeenPlainParam && param.type === \"AssignmentPattern\") {\r\n                    context.report({\r\n                        node: param,\r\n                        messageId: \"shouldBeLast\"\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            FunctionDeclaration: handleFunction,\r\n            FunctionExpression: handleFunction,\r\n            ArrowFunctionExpression: handleFunction\r\n        };\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}