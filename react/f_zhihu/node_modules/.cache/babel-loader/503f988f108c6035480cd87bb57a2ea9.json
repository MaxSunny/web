{"ast":null,"code":"/**\r\n * @fileoverview A rule to disallow calls to the Object constructor\r\n * @author Matt DuVall <http://www.mattduvall.com/>\r\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nconst astUtils = require(\"./utils/ast-utils\"); //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\n\n\nmodule.exports = {\n  meta: {\n    type: \"suggestion\",\n    docs: {\n      description: \"disallow `Object` constructors\",\n      recommended: false,\n      url: \"https://eslint.org/docs/rules/no-new-object\"\n    },\n    schema: [],\n    messages: {\n      preferLiteral: \"The object literal notation {} is preferrable.\"\n    }\n  },\n\n  create(context) {\n    return {\n      NewExpression(node) {\n        const variable = astUtils.getVariableByName(context.getScope(), node.callee.name);\n\n        if (variable && variable.identifiers.length > 0) {\n          return;\n        }\n\n        if (node.callee.name === \"Object\") {\n          context.report({\n            node,\n            messageId: \"preferLiteral\"\n          });\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"sources":["C:/Users/2928/Desktop/zhuawa/notes/project_demo/react_project/node_modules/eslint/lib/rules/no-new-object.js"],"names":["astUtils","require","module","exports","meta","type","docs","description","recommended","url","schema","messages","preferLiteral","create","context","NewExpression","node","variable","getVariableByName","getScope","callee","name","identifiers","length","report","messageId"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,a,CAEA;AACA;AACA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,mBAAD,CAAxB,C,CAEA;AACA;AACA;;AAEA;;;AACAC,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE,YADJ;AAGFC,IAAAA,IAAI,EAAE;AACFC,MAAAA,WAAW,EAAE,gCADX;AAEFC,MAAAA,WAAW,EAAE,KAFX;AAGFC,MAAAA,GAAG,EAAE;AAHH,KAHJ;AASFC,IAAAA,MAAM,EAAE,EATN;AAWFC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,aAAa,EAAE;AADT;AAXR,GADO;;AAiBbC,EAAAA,MAAM,CAACC,OAAD,EAAU;AACZ,WAAO;AACHC,MAAAA,aAAa,CAACC,IAAD,EAAO;AAChB,cAAMC,QAAQ,GAAGjB,QAAQ,CAACkB,iBAAT,CACbJ,OAAO,CAACK,QAAR,EADa,EAEbH,IAAI,CAACI,MAAL,CAAYC,IAFC,CAAjB;;AAKA,YAAIJ,QAAQ,IAAIA,QAAQ,CAACK,WAAT,CAAqBC,MAArB,GAA8B,CAA9C,EAAiD;AAC7C;AACH;;AAED,YAAIP,IAAI,CAACI,MAAL,CAAYC,IAAZ,KAAqB,QAAzB,EAAmC;AAC/BP,UAAAA,OAAO,CAACU,MAAR,CAAe;AACXR,YAAAA,IADW;AAEXS,YAAAA,SAAS,EAAE;AAFA,WAAf;AAIH;AACJ;;AAjBE,KAAP;AAmBH;;AArCY,CAAjB","sourcesContent":["/**\r\n * @fileoverview A rule to disallow calls to the Object constructor\r\n * @author Matt DuVall <http://www.mattduvall.com/>\r\n */\r\n\r\n\"use strict\";\r\n\r\n//------------------------------------------------------------------------------\r\n// Requirements\r\n//------------------------------------------------------------------------------\r\n\r\nconst astUtils = require(\"./utils/ast-utils\");\r\n\r\n//------------------------------------------------------------------------------\r\n// Rule Definition\r\n//------------------------------------------------------------------------------\r\n\r\n/** @type {import('../shared/types').Rule} */\r\nmodule.exports = {\r\n    meta: {\r\n        type: \"suggestion\",\r\n\r\n        docs: {\r\n            description: \"disallow `Object` constructors\",\r\n            recommended: false,\r\n            url: \"https://eslint.org/docs/rules/no-new-object\"\r\n        },\r\n\r\n        schema: [],\r\n\r\n        messages: {\r\n            preferLiteral: \"The object literal notation {} is preferrable.\"\r\n        }\r\n    },\r\n\r\n    create(context) {\r\n        return {\r\n            NewExpression(node) {\r\n                const variable = astUtils.getVariableByName(\r\n                    context.getScope(),\r\n                    node.callee.name\r\n                );\r\n\r\n                if (variable && variable.identifiers.length > 0) {\r\n                    return;\r\n                }\r\n\r\n                if (node.callee.name === \"Object\") {\r\n                    context.report({\r\n                        node,\r\n                        messageId: \"preferLiteral\"\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}