{"ast":null,"code":"/**\r\n * @fileoverview A class of identifiers generator for code path segments.\r\n *\r\n * Each rule uses the identifier of code path segments to store additional\r\n * information of the code path.\r\n *\r\n * @author Toru Nagashima\r\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\n/**\r\n * A generator for unique ids.\r\n */\n\nclass IdGenerator {\n  /**\r\n   * @param {string} prefix Optional. A prefix of generated ids.\r\n   */\n  constructor(prefix) {\n    this.prefix = String(prefix);\n    this.n = 0;\n  }\n  /**\r\n   * Generates id.\r\n   * @returns {string} A generated id.\r\n   */\n\n\n  next() {\n    this.n = 1 + this.n | 0;\n    /* istanbul ignore if */\n\n    if (this.n < 0) {\n      this.n = 1;\n    }\n\n    return this.prefix + this.n;\n  }\n\n}\n\nmodule.exports = IdGenerator;","map":{"version":3,"sources":["C:/Users/2928/Desktop/zhuawa/notes/project_demo/react_project/node_modules/eslint/lib/linter/code-path-analysis/id-generator.js"],"names":["IdGenerator","constructor","prefix","String","n","next","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,a,CAEA;AACA;AACA;;AAEA;AACA;AACA;;AACA,MAAMA,WAAN,CAAkB;AAEd;AACJ;AACA;AACIC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChB,SAAKA,MAAL,GAAcC,MAAM,CAACD,MAAD,CAApB;AACA,SAAKE,CAAL,GAAS,CAAT;AACH;AAED;AACJ;AACA;AACA;;;AACIC,EAAAA,IAAI,GAAG;AACH,SAAKD,CAAL,GAAS,IAAI,KAAKA,CAAT,GAAa,CAAtB;AAEA;;AACA,QAAI,KAAKA,CAAL,GAAS,CAAb,EAAgB;AACZ,WAAKA,CAAL,GAAS,CAAT;AACH;;AAED,WAAO,KAAKF,MAAL,GAAc,KAAKE,CAA1B;AACH;;AAvBa;;AA0BlBE,MAAM,CAACC,OAAP,GAAiBP,WAAjB","sourcesContent":["/**\r\n * @fileoverview A class of identifiers generator for code path segments.\r\n *\r\n * Each rule uses the identifier of code path segments to store additional\r\n * information of the code path.\r\n *\r\n * @author Toru Nagashima\r\n */\r\n\r\n\"use strict\";\r\n\r\n//------------------------------------------------------------------------------\r\n// Public Interface\r\n//------------------------------------------------------------------------------\r\n\r\n/**\r\n * A generator for unique ids.\r\n */\r\nclass IdGenerator {\r\n\r\n    /**\r\n     * @param {string} prefix Optional. A prefix of generated ids.\r\n     */\r\n    constructor(prefix) {\r\n        this.prefix = String(prefix);\r\n        this.n = 0;\r\n    }\r\n\r\n    /**\r\n     * Generates id.\r\n     * @returns {string} A generated id.\r\n     */\r\n    next() {\r\n        this.n = 1 + this.n | 0;\r\n\r\n        /* istanbul ignore if */\r\n        if (this.n < 0) {\r\n            this.n = 1;\r\n        }\r\n\r\n        return this.prefix + this.n;\r\n    }\r\n}\r\n\r\nmodule.exports = IdGenerator;\r\n"]},"metadata":{},"sourceType":"script"}