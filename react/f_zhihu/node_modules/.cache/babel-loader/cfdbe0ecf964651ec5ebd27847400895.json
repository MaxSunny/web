{"ast":null,"code":"/**\r\n * @fileoverview Rule to flag when initializing octal literal\r\n * @author Ilya Volodin\r\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\n\nmodule.exports = {\n  meta: {\n    type: \"suggestion\",\n    docs: {\n      description: \"disallow octal literals\",\n      recommended: true,\n      url: \"https://eslint.org/docs/rules/no-octal\"\n    },\n    schema: [],\n    messages: {\n      noOcatal: \"Octal literals should not be used.\"\n    }\n  },\n\n  create(context) {\n    return {\n      Literal(node) {\n        if (typeof node.value === \"number\" && /^0[0-9]/u.test(node.raw)) {\n          context.report({\n            node,\n            messageId: \"noOcatal\"\n          });\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"sources":["C:/Users/2928/Desktop/zhuawa/notes/project_demo/react_project/node_modules/eslint/lib/rules/no-octal.js"],"names":["module","exports","meta","type","docs","description","recommended","url","schema","messages","noOcatal","create","context","Literal","node","value","test","raw","report","messageId"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,a,CAEA;AACA;AACA;;AAEA;;AACAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE,YADJ;AAGFC,IAAAA,IAAI,EAAE;AACFC,MAAAA,WAAW,EAAE,yBADX;AAEFC,MAAAA,WAAW,EAAE,IAFX;AAGFC,MAAAA,GAAG,EAAE;AAHH,KAHJ;AASFC,IAAAA,MAAM,EAAE,EATN;AAWFC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,QAAQ,EAAE;AADJ;AAXR,GADO;;AAiBbC,EAAAA,MAAM,CAACC,OAAD,EAAU;AAEZ,WAAO;AAEHC,MAAAA,OAAO,CAACC,IAAD,EAAO;AACV,YAAI,OAAOA,IAAI,CAACC,KAAZ,KAAsB,QAAtB,IAAkC,WAAWC,IAAX,CAAgBF,IAAI,CAACG,GAArB,CAAtC,EAAiE;AAC7DL,UAAAA,OAAO,CAACM,MAAR,CAAe;AACXJ,YAAAA,IADW;AAEXK,YAAAA,SAAS,EAAE;AAFA,WAAf;AAIH;AACJ;;AATE,KAAP;AAYH;;AA/BY,CAAjB","sourcesContent":["/**\r\n * @fileoverview Rule to flag when initializing octal literal\r\n * @author Ilya Volodin\r\n */\r\n\r\n\"use strict\";\r\n\r\n//------------------------------------------------------------------------------\r\n// Rule Definition\r\n//------------------------------------------------------------------------------\r\n\r\n/** @type {import('../shared/types').Rule} */\r\nmodule.exports = {\r\n    meta: {\r\n        type: \"suggestion\",\r\n\r\n        docs: {\r\n            description: \"disallow octal literals\",\r\n            recommended: true,\r\n            url: \"https://eslint.org/docs/rules/no-octal\"\r\n        },\r\n\r\n        schema: [],\r\n\r\n        messages: {\r\n            noOcatal: \"Octal literals should not be used.\"\r\n        }\r\n    },\r\n\r\n    create(context) {\r\n\r\n        return {\r\n\r\n            Literal(node) {\r\n                if (typeof node.value === \"number\" && /^0[0-9]/u.test(node.raw)) {\r\n                    context.report({\r\n                        node,\r\n                        messageId: \"noOcatal\"\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}