{"ast":null,"code":"/**\r\n * @fileoverview Reports useless `catch` clauses that just rethrow their error.\r\n * @author Teddy Katz\r\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\n\nmodule.exports = {\n  meta: {\n    type: \"suggestion\",\n    docs: {\n      description: \"disallow unnecessary `catch` clauses\",\n      recommended: true,\n      url: \"https://eslint.org/docs/rules/no-useless-catch\"\n    },\n    schema: [],\n    messages: {\n      unnecessaryCatchClause: \"Unnecessary catch clause.\",\n      unnecessaryCatch: \"Unnecessary try/catch wrapper.\"\n    }\n  },\n\n  create(context) {\n    return {\n      CatchClause(node) {\n        if (node.param && node.param.type === \"Identifier\" && node.body.body.length && node.body.body[0].type === \"ThrowStatement\" && node.body.body[0].argument.type === \"Identifier\" && node.body.body[0].argument.name === node.param.name) {\n          if (node.parent.finalizer) {\n            context.report({\n              node,\n              messageId: \"unnecessaryCatchClause\"\n            });\n          } else {\n            context.report({\n              node: node.parent,\n              messageId: \"unnecessaryCatch\"\n            });\n          }\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"sources":["C:/Users/2928/Desktop/zhuawa/notes/project_demo/react_project/node_modules/eslint/lib/rules/no-useless-catch.js"],"names":["module","exports","meta","type","docs","description","recommended","url","schema","messages","unnecessaryCatchClause","unnecessaryCatch","create","context","CatchClause","node","param","body","length","argument","name","parent","finalizer","report","messageId"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,a,CAEA;AACA;AACA;;AAEA;;AACAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE,YADJ;AAGFC,IAAAA,IAAI,EAAE;AACFC,MAAAA,WAAW,EAAE,sCADX;AAEFC,MAAAA,WAAW,EAAE,IAFX;AAGFC,MAAAA,GAAG,EAAE;AAHH,KAHJ;AASFC,IAAAA,MAAM,EAAE,EATN;AAWFC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,sBAAsB,EAAE,2BADlB;AAENC,MAAAA,gBAAgB,EAAE;AAFZ;AAXR,GADO;;AAkBbC,EAAAA,MAAM,CAACC,OAAD,EAAU;AACZ,WAAO;AACHC,MAAAA,WAAW,CAACC,IAAD,EAAO;AACd,YACIA,IAAI,CAACC,KAAL,IACAD,IAAI,CAACC,KAAL,CAAWb,IAAX,KAAoB,YADpB,IAEAY,IAAI,CAACE,IAAL,CAAUA,IAAV,CAAeC,MAFf,IAGAH,IAAI,CAACE,IAAL,CAAUA,IAAV,CAAe,CAAf,EAAkBd,IAAlB,KAA2B,gBAH3B,IAIAY,IAAI,CAACE,IAAL,CAAUA,IAAV,CAAe,CAAf,EAAkBE,QAAlB,CAA2BhB,IAA3B,KAAoC,YAJpC,IAKAY,IAAI,CAACE,IAAL,CAAUA,IAAV,CAAe,CAAf,EAAkBE,QAAlB,CAA2BC,IAA3B,KAAoCL,IAAI,CAACC,KAAL,CAAWI,IANnD,EAOE;AACE,cAAIL,IAAI,CAACM,MAAL,CAAYC,SAAhB,EAA2B;AACvBT,YAAAA,OAAO,CAACU,MAAR,CAAe;AACXR,cAAAA,IADW;AAEXS,cAAAA,SAAS,EAAE;AAFA,aAAf;AAIH,WALD,MAKO;AACHX,YAAAA,OAAO,CAACU,MAAR,CAAe;AACXR,cAAAA,IAAI,EAAEA,IAAI,CAACM,MADA;AAEXG,cAAAA,SAAS,EAAE;AAFA,aAAf;AAIH;AACJ;AACJ;;AAtBE,KAAP;AAwBH;;AA3CY,CAAjB","sourcesContent":["/**\r\n * @fileoverview Reports useless `catch` clauses that just rethrow their error.\r\n * @author Teddy Katz\r\n */\r\n\r\n\"use strict\";\r\n\r\n//------------------------------------------------------------------------------\r\n// Rule Definition\r\n//------------------------------------------------------------------------------\r\n\r\n/** @type {import('../shared/types').Rule} */\r\nmodule.exports = {\r\n    meta: {\r\n        type: \"suggestion\",\r\n\r\n        docs: {\r\n            description: \"disallow unnecessary `catch` clauses\",\r\n            recommended: true,\r\n            url: \"https://eslint.org/docs/rules/no-useless-catch\"\r\n        },\r\n\r\n        schema: [],\r\n\r\n        messages: {\r\n            unnecessaryCatchClause: \"Unnecessary catch clause.\",\r\n            unnecessaryCatch: \"Unnecessary try/catch wrapper.\"\r\n        }\r\n    },\r\n\r\n    create(context) {\r\n        return {\r\n            CatchClause(node) {\r\n                if (\r\n                    node.param &&\r\n                    node.param.type === \"Identifier\" &&\r\n                    node.body.body.length &&\r\n                    node.body.body[0].type === \"ThrowStatement\" &&\r\n                    node.body.body[0].argument.type === \"Identifier\" &&\r\n                    node.body.body[0].argument.name === node.param.name\r\n                ) {\r\n                    if (node.parent.finalizer) {\r\n                        context.report({\r\n                            node,\r\n                            messageId: \"unnecessaryCatchClause\"\r\n                        });\r\n                    } else {\r\n                        context.report({\r\n                            node: node.parent,\r\n                            messageId: \"unnecessaryCatch\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}