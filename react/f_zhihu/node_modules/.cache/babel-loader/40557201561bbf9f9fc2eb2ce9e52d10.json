{"ast":null,"code":"/*! @author Toru Nagashima <https://github.com/mysticatea> */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar ast = /*#__PURE__*/Object.freeze({});\nlet largeIdStartRanges = undefined;\nlet largeIdContinueRanges = undefined;\n\nfunction isIdStart(cp) {\n  if (cp < 0x41) return false;\n  if (cp < 0x5b) return true;\n  if (cp < 0x61) return false;\n  if (cp < 0x7b) return true;\n  return isLargeIdStart(cp);\n}\n\nfunction isIdContinue(cp) {\n  if (cp < 0x30) return false;\n  if (cp < 0x3a) return true;\n  if (cp < 0x41) return false;\n  if (cp < 0x5b) return true;\n  if (cp === 0x5f) return true;\n  if (cp < 0x61) return false;\n  if (cp < 0x7b) return true;\n  return isLargeIdStart(cp) || isLargeIdContinue(cp);\n}\n\nfunction isLargeIdStart(cp) {\n  return isInRange(cp, largeIdStartRanges || (largeIdStartRanges = initLargeIdStartRanges()));\n}\n\nfunction isLargeIdContinue(cp) {\n  return isInRange(cp, largeIdContinueRanges || (largeIdContinueRanges = initLargeIdContinueRanges()));\n}\n\nfunction initLargeIdStartRanges() {\n  return restoreRanges(\"4q 0 b 0 5 0 6 m 2 u 2 cp 5 b f 4 8 0 2 0 3m 4 2 1 3 3 2 0 7 0 2 2 2 0 2 j 2 2a 2 3u 9 4l 2 11 3 0 7 14 20 q 5 3 1a 16 10 1 2 2q 2 0 g 1 8 1 b 2 3 0 h 0 2 t u 2g c 0 p w a 1 5 0 6 l 5 0 a 0 4 0 o o 8 a 1i k 2 h 1p 1h 4 0 j 0 8 9 g f 5 7 3 1 3 l 2 6 2 0 4 3 4 0 h 0 e 1 2 2 f 1 b 0 9 5 5 1 3 l 2 6 2 1 2 1 2 1 w 3 2 0 k 2 h 8 2 2 2 l 2 6 2 1 2 4 4 0 j 0 g 1 o 0 c 7 3 1 3 l 2 6 2 1 2 4 4 0 v 1 2 2 g 0 i 0 2 5 4 2 2 3 4 1 2 0 2 1 4 1 4 2 4 b n 0 1h 7 2 2 2 m 2 f 4 0 r 2 6 1 v 0 5 7 2 2 2 m 2 9 2 4 4 0 x 0 2 1 g 1 i 8 2 2 2 14 3 0 h 0 6 2 9 2 p 5 6 h 4 n 2 8 2 0 3 6 1n 1b 2 1 d 6 1n 1 2 0 2 4 2 n 2 0 2 9 2 1 a 0 3 4 2 0 m 3 x 0 1s 7 2 z s 4 38 16 l 0 h 5 5 3 4 0 4 1 8 2 5 c d 0 i 11 2 0 6 0 3 16 2 98 2 3 3 6 2 0 2 3 3 14 2 3 3 w 2 3 3 6 2 0 2 3 3 e 2 1k 2 3 3 1u 12 f h 2d 3 5 4 h7 3 g 2 p 6 22 4 a 8 c 2 3 f h f h f c 2 2 g 1f 10 0 5 0 1w 2g 8 14 2 0 6 1x b u 1e t 3 4 c 17 5 p 1j m a 1g 2b 0 2m 1a i 6 1k t e 1 b 17 r z 16 2 b z 3 8 8 16 3 2 16 3 2 5 2 1 4 0 6 5b 1t 7p 3 5 3 11 3 5 3 7 2 0 2 0 2 0 2 u 3 1g 2 6 2 0 4 2 2 6 4 3 3 5 5 c 6 2 2 6 39 0 e 0 h c 2u 0 5 0 3 9 2 0 3 5 7 0 2 0 2 0 2 f 3 3 6 4 5 0 i 14 22g 1a 2 1a 2 3o 7 3 4 1 d 11 2 0 6 0 3 1j 8 0 h m a 6 2 6 2 6 2 6 2 6 2 6 2 6 2 6 fb 2 q 8 8 4 3 4 5 2d 5 4 2 2h 2 3 6 16 2 2l i v 1d f e9 533 1t g70 4 wc 1w 19 3 7g 4 f b 1 l 1a h u 3 27 14 8 3 2u 3 1g 3 8 17 c 2 2 2 3 2 m u 1f f 1d 1r 5 4 0 2 1 c r b m q s 8 1a t 0 h 4 2 9 b 4 2 14 o 2 2 7 l m 4 0 4 1d 2 0 4 1 3 4 3 0 2 0 p 2 3 a 8 2 d 5 3 5 3 5 a 6 2 6 2 16 2 d 7 36 u 8mb d m 5 1c 6it a5 3 2x 13 6 d 4 6 0 2 9 2 c 2 4 2 0 2 1 2 1 2 2z y a2 j 1r 3 1h 15 b 39 4 2 3q 11 p 7 p c 2g 4 5 3 5 3 5 3 2 10 b 2 p 2 i 2 1 2 e 3 d z 3e 1y 1g 7g s 4 1c 1c v e t 6 11 b t 3 z 5 7 2 4 17 4d j z 5 z 5 13 9 1f 4d 8m a l b 7 49 5 3 0 2 17 2 1 4 0 3 m b m a u 1u i 2 1 b l b p 1z 1j 7 1 1t 0 g 3 2 2 2 s 17 s 4 s 10 7 2 r s 1h b l b i e h 33 20 1k 1e e 1e e z 9p 15 7 1 27 s b 0 9 l 2z k s m d 1g 24 18 x o r z u 0 3 0 9 y 4 0 d 1b f 3 m 0 2 0 10 h 2 o 2d 6 2 0 2 3 2 e 2 9 8 1a 13 7 3 1 3 l 2 6 2 1 2 4 4 0 j 0 d 4 4f 1g j 3 l 2 v 1b l 1 2 0 55 1a 16 3 11 1b l 0 1o 16 e 0 20 q 6e 17 39 1r w 7 3 0 3 7 2 1 2 n g 0 2 0 2n 7 3 12 h 0 2 0 t 0 b 13 8 0 m 0 c 19 k 0 z 1k 7c 8 2 10 i 0 1e t 35 6 2 1 2 11 m 0 q 5 2 1 2 v f 0 94 i 5a 0 28 pl 2v 32 i 5f 24d tq 34i g6 6nu fs 8 u 36 t j 1b h 3 w k 6 i j5 1r 3l 22 6 0 1v c 1t 1 2 0 t 4qf 9 yd 17 8 6wo 7y 1e 2 i 3 9 az 1s5 2y 6 c 4 8 8 9 4mf 2c 2 1y 2 1 3 0 3 1 3 3 2 b 2 0 2 6 2 1s 2 3 3 7 2 6 2 r 2 3 2 4 2 0 4 6 2 9f 3 o 2 o 2 u 2 o 2 u 2 o 2 u 2 o 2 u 2 o 2 7 1th 18 b 6 h 0 aa 17 105 5g 1o 1v 8 0 xh 3 2 q 2 1 2 0 3 0 2 9 2 3 2 0 2 0 7 0 5 0 2 0 2 0 2 2 2 1 2 0 3 0 2 0 2 0 2 0 2 0 2 1 2 0 3 3 2 6 2 3 2 3 2 0 2 9 2 g 6 2 2 4 2 g 3et wyl z 378 c 65 3 4g1 f 5rk 2e8 f1 15v 3t6\");\n}\n\nfunction initLargeIdContinueRanges() {\n  return restoreRanges(\"53 0 g9 33 o 0 70 4 7e 18 2 0 2 1 2 1 2 0 21 a 1d u 7 0 2u 6 3 5 3 1 2 3 3 9 o 0 v q 2k a g 9 y 8 a 0 p 3 2 8 2 2 2 4 18 2 3c e 2 w 1j 2 2 h 2 6 b 1 3 9 i 2 1l 0 2 6 3 1 3 2 a 0 b 1 3 9 f 0 3 2 1l 0 2 4 5 1 3 2 4 0 l b 4 0 c 2 1l 0 2 7 2 2 2 2 l 1 3 9 b 5 2 2 1l 0 2 6 3 1 3 2 8 2 b 1 3 9 j 0 1o 4 4 2 2 3 a 0 f 9 h 4 1m 6 2 2 2 3 8 1 c 1 3 9 i 2 1l 0 2 6 2 2 2 3 8 1 c 1 3 9 h 3 1k 1 2 6 2 2 2 3 a 0 b 1 3 9 i 2 1z 0 5 5 2 0 2 7 7 9 3 1 1q 0 3 6 d 7 2 9 2g 0 3 8 c 5 3 9 1r 1 7 9 c 0 2 0 2 0 5 1 1e j 2 1 6 a 2 z a 0 2t j 2 9 d 3 5 2 2 2 3 6 4 3 e b 2 e jk 2 a 8 pt 2 u 2 u 1 v 1 1t v a 0 3 9 y 2 3 9 40 0 3b b 5 b b 9 3l a 1p 4 1m 9 2 s 3 a 7 9 n d 2 1 1s 4 1c g c 9 i 8 d 2 v c 3 9 19 d 1d j 9 9 7 9 3b 2 2 k 5 0 7 0 3 2 5j 1l 2 4 g0 1 k 0 3g c 5 0 4 b 2db 2 3y 0 2p v ff 5 2y 1 n7q 9 1y 0 5 9 x 1 29 1 7l 0 4 0 5 0 o 4 5 0 2c 1 1f h b 9 7 h e a t 7 q c 19 3 1c d g 9 c 0 b 9 1c d d 0 9 1 3 9 y 2 1f 0 2 2 3 1 6 1 2 0 16 4 6 1 6l 7 2 1 3 9 fmt 0 ki f h f 4 1 p 2 5d 9 12 0 ji 0 6b 0 46 4 86 9 120 2 2 1 6 3 15 2 5 0 4m 1 fy 3 9 9 aa 1 4a a 4w 2 1i e w 9 g 3 1a a 1i 9 7 2 11 d 2 9 6 1 19 0 d 2 1d d 9 3 2 b 2b b 7 0 4h b 6 9 7 3 1k 1 2 6 3 1 3 2 a 0 b 1 3 6 4 4 5d h a 9 5 0 2a j d 9 5y 6 3 8 s 1 2b g g 9 2a c 9 9 2c e 5 9 6r e 4m 9 1z 5 2 1 3 3 2 0 2 1 d 9 3c 6 3 6 4 0 t 9 15 6 2 3 9 0 a a 1b f ba 7 2 7 h 9 1l l 2 d 3f 5 4 0 2 1 2 6 2 0 9 9 1d 4 2 1 2 4 9 9 96 3 ewa 9 3r 4 1o 6 q 9 s6 0 2 1i 8 3 2a 0 c 1 f58 1 43r 4 4 5 9 7 3 6 v 3 45 2 13e 1d e9 1i 5 1d 9 0 f 0 n 4 2 e 11t 6 2 g 3 6 2 1 2 4 7a 6 a 9 bn d 15j 6 32 6 6 9 3o7 9 gvt3 6n\");\n}\n\nfunction isInRange(cp, ranges) {\n  let l = 0,\n      r = ranges.length / 2 | 0,\n      i = 0,\n      min = 0,\n      max = 0;\n\n  while (l < r) {\n    i = (l + r) / 2 | 0;\n    min = ranges[2 * i];\n    max = ranges[2 * i + 1];\n\n    if (cp < min) {\n      r = i;\n    } else if (cp > max) {\n      l = i + 1;\n    } else {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction restoreRanges(data) {\n  let last = 0;\n  return data.split(\" \").map(s => last += parseInt(s, 36) | 0);\n}\n\nclass DataSet {\n  constructor(raw2018, raw2019, raw2020, raw2021) {\n    this._raw2018 = raw2018;\n    this._raw2019 = raw2019;\n    this._raw2020 = raw2020;\n    this._raw2021 = raw2021;\n  }\n\n  get es2018() {\n    return this._set2018 || (this._set2018 = new Set(this._raw2018.split(\" \")));\n  }\n\n  get es2019() {\n    return this._set2019 || (this._set2019 = new Set(this._raw2019.split(\" \")));\n  }\n\n  get es2020() {\n    return this._set2020 || (this._set2020 = new Set(this._raw2020.split(\" \")));\n  }\n\n  get es2021() {\n    return this._set2021 || (this._set2021 = new Set(this._raw2021.split(\" \")));\n  }\n\n}\n\nconst gcNameSet = new Set([\"General_Category\", \"gc\"]);\nconst scNameSet = new Set([\"Script\", \"Script_Extensions\", \"sc\", \"scx\"]);\nconst gcValueSets = new DataSet(\"C Cased_Letter Cc Cf Close_Punctuation Cn Co Combining_Mark Connector_Punctuation Control Cs Currency_Symbol Dash_Punctuation Decimal_Number Enclosing_Mark Final_Punctuation Format Initial_Punctuation L LC Letter Letter_Number Line_Separator Ll Lm Lo Lowercase_Letter Lt Lu M Mark Math_Symbol Mc Me Mn Modifier_Letter Modifier_Symbol N Nd Nl No Nonspacing_Mark Number Open_Punctuation Other Other_Letter Other_Number Other_Punctuation Other_Symbol P Paragraph_Separator Pc Pd Pe Pf Pi Po Private_Use Ps Punctuation S Sc Separator Sk Sm So Space_Separator Spacing_Mark Surrogate Symbol Titlecase_Letter Unassigned Uppercase_Letter Z Zl Zp Zs cntrl digit punct\", \"\", \"\", \"\");\nconst scValueSets = new DataSet(\"Adlam Adlm Aghb Ahom Anatolian_Hieroglyphs Arab Arabic Armenian Armi Armn Avestan Avst Bali Balinese Bamu Bamum Bass Bassa_Vah Batak Batk Beng Bengali Bhaiksuki Bhks Bopo Bopomofo Brah Brahmi Brai Braille Bugi Buginese Buhd Buhid Cakm Canadian_Aboriginal Cans Cari Carian Caucasian_Albanian Chakma Cham Cher Cherokee Common Copt Coptic Cprt Cuneiform Cypriot Cyrillic Cyrl Deseret Deva Devanagari Dsrt Dupl Duployan Egyp Egyptian_Hieroglyphs Elba Elbasan Ethi Ethiopic Geor Georgian Glag Glagolitic Gonm Goth Gothic Gran Grantha Greek Grek Gujarati Gujr Gurmukhi Guru Han Hang Hangul Hani Hano Hanunoo Hatr Hatran Hebr Hebrew Hira Hiragana Hluw Hmng Hung Imperial_Aramaic Inherited Inscriptional_Pahlavi Inscriptional_Parthian Ital Java Javanese Kaithi Kali Kana Kannada Katakana Kayah_Li Khar Kharoshthi Khmer Khmr Khoj Khojki Khudawadi Knda Kthi Lana Lao Laoo Latin Latn Lepc Lepcha Limb Limbu Lina Linb Linear_A Linear_B Lisu Lyci Lycian Lydi Lydian Mahajani Mahj Malayalam Mand Mandaic Mani Manichaean Marc Marchen Masaram_Gondi Meetei_Mayek Mend Mende_Kikakui Merc Mero Meroitic_Cursive Meroitic_Hieroglyphs Miao Mlym Modi Mong Mongolian Mro Mroo Mtei Mult Multani Myanmar Mymr Nabataean Narb Nbat New_Tai_Lue Newa Nko Nkoo Nshu Nushu Ogam Ogham Ol_Chiki Olck Old_Hungarian Old_Italic Old_North_Arabian Old_Permic Old_Persian Old_South_Arabian Old_Turkic Oriya Orkh Orya Osage Osge Osma Osmanya Pahawh_Hmong Palm Palmyrene Pau_Cin_Hau Pauc Perm Phag Phags_Pa Phli Phlp Phnx Phoenician Plrd Prti Psalter_Pahlavi Qaac Qaai Rejang Rjng Runic Runr Samaritan Samr Sarb Saur Saurashtra Sgnw Sharada Shavian Shaw Shrd Sidd Siddham SignWriting Sind Sinh Sinhala Sora Sora_Sompeng Soyo Soyombo Sund Sundanese Sylo Syloti_Nagri Syrc Syriac Tagalog Tagb Tagbanwa Tai_Le Tai_Tham Tai_Viet Takr Takri Tale Talu Tamil Taml Tang Tangut Tavt Telu Telugu Tfng Tglg Thaa Thaana Thai Tibetan Tibt Tifinagh Tirh Tirhuta Ugar Ugaritic Vai Vaii Wara Warang_Citi Xpeo Xsux Yi Yiii Zanabazar_Square Zanb Zinh Zyyy\", \"Dogr Dogra Gong Gunjala_Gondi Hanifi_Rohingya Maka Makasar Medefaidrin Medf Old_Sogdian Rohg Sogd Sogdian Sogo\", \"Elym Elymaic Hmnp Nand Nandinagari Nyiakeng_Puachue_Hmong Wancho Wcho\", \"Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi\");\nconst binPropertySets = new DataSet(\"AHex ASCII ASCII_Hex_Digit Alpha Alphabetic Any Assigned Bidi_C Bidi_Control Bidi_M Bidi_Mirrored CI CWCF CWCM CWKCF CWL CWT CWU Case_Ignorable Cased Changes_When_Casefolded Changes_When_Casemapped Changes_When_Lowercased Changes_When_NFKC_Casefolded Changes_When_Titlecased Changes_When_Uppercased DI Dash Default_Ignorable_Code_Point Dep Deprecated Dia Diacritic Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Ext Extender Gr_Base Gr_Ext Grapheme_Base Grapheme_Extend Hex Hex_Digit IDC IDS IDSB IDST IDS_Binary_Operator IDS_Trinary_Operator ID_Continue ID_Start Ideo Ideographic Join_C Join_Control LOE Logical_Order_Exception Lower Lowercase Math NChar Noncharacter_Code_Point Pat_Syn Pat_WS Pattern_Syntax Pattern_White_Space QMark Quotation_Mark RI Radical Regional_Indicator SD STerm Sentence_Terminal Soft_Dotted Term Terminal_Punctuation UIdeo Unified_Ideograph Upper Uppercase VS Variation_Selector White_Space XIDC XIDS XID_Continue XID_Start space\", \"Extended_Pictographic\", \"\", \"EBase EComp EMod EPres ExtPict\");\n\nfunction isValidUnicodeProperty(version, name, value) {\n  if (gcNameSet.has(name)) {\n    return version >= 2018 && gcValueSets.es2018.has(value);\n  }\n\n  if (scNameSet.has(name)) {\n    return version >= 2018 && scValueSets.es2018.has(value) || version >= 2019 && scValueSets.es2019.has(value) || version >= 2020 && scValueSets.es2020.has(value) || version >= 2021 && scValueSets.es2021.has(value);\n  }\n\n  return false;\n}\n\nfunction isValidLoneUnicodeProperty(version, value) {\n  return version >= 2018 && binPropertySets.es2018.has(value) || version >= 2019 && binPropertySets.es2019.has(value) || version >= 2021 && binPropertySets.es2021.has(value);\n}\n\nconst Backspace = 0x08;\nconst CharacterTabulation = 0x09;\nconst LineFeed = 0x0a;\nconst LineTabulation = 0x0b;\nconst FormFeed = 0x0c;\nconst CarriageReturn = 0x0d;\nconst ExclamationMark = 0x21;\nconst DollarSign = 0x24;\nconst LeftParenthesis = 0x28;\nconst RightParenthesis = 0x29;\nconst Asterisk = 0x2a;\nconst PlusSign = 0x2b;\nconst Comma = 0x2c;\nconst HyphenMinus = 0x2d;\nconst FullStop = 0x2e;\nconst Solidus = 0x2f;\nconst DigitZero = 0x30;\nconst DigitOne = 0x31;\nconst DigitSeven = 0x37;\nconst DigitNine = 0x39;\nconst Colon = 0x3a;\nconst LessThanSign = 0x3c;\nconst EqualsSign = 0x3d;\nconst GreaterThanSign = 0x3e;\nconst QuestionMark = 0x3f;\nconst LatinCapitalLetterA = 0x41;\nconst LatinCapitalLetterB = 0x42;\nconst LatinCapitalLetterD = 0x44;\nconst LatinCapitalLetterF = 0x46;\nconst LatinCapitalLetterP = 0x50;\nconst LatinCapitalLetterS = 0x53;\nconst LatinCapitalLetterW = 0x57;\nconst LatinCapitalLetterZ = 0x5a;\nconst LowLine = 0x5f;\nconst LatinSmallLetterA = 0x61;\nconst LatinSmallLetterB = 0x62;\nconst LatinSmallLetterC = 0x63;\nconst LatinSmallLetterD = 0x64;\nconst LatinSmallLetterF = 0x66;\nconst LatinSmallLetterG = 0x67;\nconst LatinSmallLetterI = 0x69;\nconst LatinSmallLetterK = 0x6b;\nconst LatinSmallLetterM = 0x6d;\nconst LatinSmallLetterN = 0x6e;\nconst LatinSmallLetterP = 0x70;\nconst LatinSmallLetterR = 0x72;\nconst LatinSmallLetterS = 0x73;\nconst LatinSmallLetterT = 0x74;\nconst LatinSmallLetterU = 0x75;\nconst LatinSmallLetterV = 0x76;\nconst LatinSmallLetterW = 0x77;\nconst LatinSmallLetterX = 0x78;\nconst LatinSmallLetterY = 0x79;\nconst LatinSmallLetterZ = 0x7a;\nconst LeftSquareBracket = 0x5b;\nconst ReverseSolidus = 0x5c;\nconst RightSquareBracket = 0x5d;\nconst CircumflexAccent = 0x5e;\nconst LeftCurlyBracket = 0x7b;\nconst VerticalLine = 0x7c;\nconst RightCurlyBracket = 0x7d;\nconst ZeroWidthNonJoiner = 0x200c;\nconst ZeroWidthJoiner = 0x200d;\nconst LineSeparator = 0x2028;\nconst ParagraphSeparator = 0x2029;\nconst MinCodePoint = 0x00;\nconst MaxCodePoint = 0x10ffff;\n\nfunction isLatinLetter(code) {\n  return code >= LatinCapitalLetterA && code <= LatinCapitalLetterZ || code >= LatinSmallLetterA && code <= LatinSmallLetterZ;\n}\n\nfunction isDecimalDigit(code) {\n  return code >= DigitZero && code <= DigitNine;\n}\n\nfunction isOctalDigit(code) {\n  return code >= DigitZero && code <= DigitSeven;\n}\n\nfunction isHexDigit(code) {\n  return code >= DigitZero && code <= DigitNine || code >= LatinCapitalLetterA && code <= LatinCapitalLetterF || code >= LatinSmallLetterA && code <= LatinSmallLetterF;\n}\n\nfunction isLineTerminator(code) {\n  return code === LineFeed || code === CarriageReturn || code === LineSeparator || code === ParagraphSeparator;\n}\n\nfunction isValidUnicode(code) {\n  return code >= MinCodePoint && code <= MaxCodePoint;\n}\n\nfunction digitToInt(code) {\n  if (code >= LatinSmallLetterA && code <= LatinSmallLetterF) {\n    return code - LatinSmallLetterA + 10;\n  }\n\n  if (code >= LatinCapitalLetterA && code <= LatinCapitalLetterF) {\n    return code - LatinCapitalLetterA + 10;\n  }\n\n  return code - DigitZero;\n}\n\nfunction isLeadSurrogate(code) {\n  return code >= 0xd800 && code <= 0xdbff;\n}\n\nfunction isTrailSurrogate(code) {\n  return code >= 0xdc00 && code <= 0xdfff;\n}\n\nfunction combineSurrogatePair(lead, trail) {\n  return (lead - 0xd800) * 0x400 + (trail - 0xdc00) + 0x10000;\n}\n\nconst legacyImpl = {\n  at(s, end, i) {\n    return i < end ? s.charCodeAt(i) : -1;\n  },\n\n  width(c) {\n    return 1;\n  }\n\n};\nconst unicodeImpl = {\n  at(s, end, i) {\n    return i < end ? s.codePointAt(i) : -1;\n  },\n\n  width(c) {\n    return c > 0xffff ? 2 : 1;\n  }\n\n};\n\nclass Reader {\n  constructor() {\n    this._impl = legacyImpl;\n    this._s = \"\";\n    this._i = 0;\n    this._end = 0;\n    this._cp1 = -1;\n    this._w1 = 1;\n    this._cp2 = -1;\n    this._w2 = 1;\n    this._cp3 = -1;\n    this._w3 = 1;\n    this._cp4 = -1;\n  }\n\n  get source() {\n    return this._s;\n  }\n\n  get index() {\n    return this._i;\n  }\n\n  get currentCodePoint() {\n    return this._cp1;\n  }\n\n  get nextCodePoint() {\n    return this._cp2;\n  }\n\n  get nextCodePoint2() {\n    return this._cp3;\n  }\n\n  get nextCodePoint3() {\n    return this._cp4;\n  }\n\n  reset(source, start, end, uFlag) {\n    this._impl = uFlag ? unicodeImpl : legacyImpl;\n    this._s = source;\n    this._end = end;\n    this.rewind(start);\n  }\n\n  rewind(index) {\n    const impl = this._impl;\n    this._i = index;\n    this._cp1 = impl.at(this._s, this._end, index);\n    this._w1 = impl.width(this._cp1);\n    this._cp2 = impl.at(this._s, this._end, index + this._w1);\n    this._w2 = impl.width(this._cp2);\n    this._cp3 = impl.at(this._s, this._end, index + this._w1 + this._w2);\n    this._w3 = impl.width(this._cp3);\n    this._cp4 = impl.at(this._s, this._end, index + this._w1 + this._w2 + this._w3);\n  }\n\n  advance() {\n    if (this._cp1 !== -1) {\n      const impl = this._impl;\n      this._i += this._w1;\n      this._cp1 = this._cp2;\n      this._w1 = this._w2;\n      this._cp2 = this._cp3;\n      this._w2 = impl.width(this._cp2);\n      this._cp3 = this._cp4;\n      this._w3 = impl.width(this._cp3);\n      this._cp4 = impl.at(this._s, this._end, this._i + this._w1 + this._w2 + this._w3);\n    }\n  }\n\n  eat(cp) {\n    if (this._cp1 === cp) {\n      this.advance();\n      return true;\n    }\n\n    return false;\n  }\n\n  eat2(cp1, cp2) {\n    if (this._cp1 === cp1 && this._cp2 === cp2) {\n      this.advance();\n      this.advance();\n      return true;\n    }\n\n    return false;\n  }\n\n  eat3(cp1, cp2, cp3) {\n    if (this._cp1 === cp1 && this._cp2 === cp2 && this._cp3 === cp3) {\n      this.advance();\n      this.advance();\n      this.advance();\n      return true;\n    }\n\n    return false;\n  }\n\n}\n\nclass RegExpSyntaxError extends SyntaxError {\n  constructor(source, uFlag, index, message) {\n    if (source) {\n      if (!source.startsWith(\"/\")) {\n        source = `/${source}/${uFlag ? \"u\" : \"\"}`;\n      }\n\n      source = `: ${source}`;\n    }\n\n    super(`Invalid regular expression${source}: ${message}`);\n    this.index = index;\n  }\n\n}\n\nfunction isSyntaxCharacter(cp) {\n  return cp === CircumflexAccent || cp === DollarSign || cp === ReverseSolidus || cp === FullStop || cp === Asterisk || cp === PlusSign || cp === QuestionMark || cp === LeftParenthesis || cp === RightParenthesis || cp === LeftSquareBracket || cp === RightSquareBracket || cp === LeftCurlyBracket || cp === RightCurlyBracket || cp === VerticalLine;\n}\n\nfunction isRegExpIdentifierStart(cp) {\n  return isIdStart(cp) || cp === DollarSign || cp === LowLine;\n}\n\nfunction isRegExpIdentifierPart(cp) {\n  return isIdContinue(cp) || cp === DollarSign || cp === LowLine || cp === ZeroWidthNonJoiner || cp === ZeroWidthJoiner;\n}\n\nfunction isUnicodePropertyNameCharacter(cp) {\n  return isLatinLetter(cp) || cp === LowLine;\n}\n\nfunction isUnicodePropertyValueCharacter(cp) {\n  return isUnicodePropertyNameCharacter(cp) || isDecimalDigit(cp);\n}\n\nclass RegExpValidator {\n  constructor(options) {\n    this._reader = new Reader();\n    this._uFlag = false;\n    this._nFlag = false;\n    this._lastIntValue = 0;\n    this._lastMinValue = 0;\n    this._lastMaxValue = 0;\n    this._lastStrValue = \"\";\n    this._lastKeyValue = \"\";\n    this._lastValValue = \"\";\n    this._lastAssertionIsQuantifiable = false;\n    this._numCapturingParens = 0;\n    this._groupNames = new Set();\n    this._backreferenceNames = new Set();\n    this._options = options || {};\n  }\n\n  validateLiteral(source) {\n    let start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : source.length;\n    this._uFlag = this._nFlag = false;\n    this.reset(source, start, end);\n    this.onLiteralEnter(start);\n\n    if (this.eat(Solidus) && this.eatRegExpBody() && this.eat(Solidus)) {\n      const flagStart = this.index;\n      const uFlag = source.includes(\"u\", flagStart);\n      this.validateFlags(source, flagStart, end);\n      this.validatePattern(source, start + 1, flagStart - 1, uFlag);\n    } else if (start >= end) {\n      this.raise(\"Empty\");\n    } else {\n      const c = String.fromCodePoint(this.currentCodePoint);\n      this.raise(`Unexpected character '${c}'`);\n    }\n\n    this.onLiteralLeave(start, end);\n  }\n\n  validateFlags(source) {\n    let start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : source.length;\n    const existingFlags = new Set();\n    let global = false;\n    let ignoreCase = false;\n    let multiline = false;\n    let sticky = false;\n    let unicode = false;\n    let dotAll = false;\n    let hasIndices = false;\n\n    for (let i = start; i < end; ++i) {\n      const flag = source.charCodeAt(i);\n\n      if (existingFlags.has(flag)) {\n        this.raise(`Duplicated flag '${source[i]}'`);\n      }\n\n      existingFlags.add(flag);\n\n      if (flag === LatinSmallLetterG) {\n        global = true;\n      } else if (flag === LatinSmallLetterI) {\n        ignoreCase = true;\n      } else if (flag === LatinSmallLetterM) {\n        multiline = true;\n      } else if (flag === LatinSmallLetterU && this.ecmaVersion >= 2015) {\n        unicode = true;\n      } else if (flag === LatinSmallLetterY && this.ecmaVersion >= 2015) {\n        sticky = true;\n      } else if (flag === LatinSmallLetterS && this.ecmaVersion >= 2018) {\n        dotAll = true;\n      } else if (flag === LatinSmallLetterD && this.ecmaVersion >= 2022) {\n        hasIndices = true;\n      } else {\n        this.raise(`Invalid flag '${source[i]}'`);\n      }\n    }\n\n    this.onFlags(start, end, global, ignoreCase, multiline, unicode, sticky, dotAll, hasIndices);\n  }\n\n  validatePattern(source) {\n    let start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : source.length;\n    let uFlag = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    this._uFlag = uFlag && this.ecmaVersion >= 2015;\n    this._nFlag = uFlag && this.ecmaVersion >= 2018;\n    this.reset(source, start, end);\n    this.consumePattern();\n\n    if (!this._nFlag && this.ecmaVersion >= 2018 && this._groupNames.size > 0) {\n      this._nFlag = true;\n      this.rewind(start);\n      this.consumePattern();\n    }\n  }\n\n  get strict() {\n    return Boolean(this._options.strict || this._uFlag);\n  }\n\n  get ecmaVersion() {\n    return this._options.ecmaVersion || 2022;\n  }\n\n  onLiteralEnter(start) {\n    if (this._options.onLiteralEnter) {\n      this._options.onLiteralEnter(start);\n    }\n  }\n\n  onLiteralLeave(start, end) {\n    if (this._options.onLiteralLeave) {\n      this._options.onLiteralLeave(start, end);\n    }\n  }\n\n  onFlags(start, end, global, ignoreCase, multiline, unicode, sticky, dotAll, hasIndices) {\n    if (this._options.onFlags) {\n      this._options.onFlags(start, end, global, ignoreCase, multiline, unicode, sticky, dotAll, hasIndices);\n    }\n  }\n\n  onPatternEnter(start) {\n    if (this._options.onPatternEnter) {\n      this._options.onPatternEnter(start);\n    }\n  }\n\n  onPatternLeave(start, end) {\n    if (this._options.onPatternLeave) {\n      this._options.onPatternLeave(start, end);\n    }\n  }\n\n  onDisjunctionEnter(start) {\n    if (this._options.onDisjunctionEnter) {\n      this._options.onDisjunctionEnter(start);\n    }\n  }\n\n  onDisjunctionLeave(start, end) {\n    if (this._options.onDisjunctionLeave) {\n      this._options.onDisjunctionLeave(start, end);\n    }\n  }\n\n  onAlternativeEnter(start, index) {\n    if (this._options.onAlternativeEnter) {\n      this._options.onAlternativeEnter(start, index);\n    }\n  }\n\n  onAlternativeLeave(start, end, index) {\n    if (this._options.onAlternativeLeave) {\n      this._options.onAlternativeLeave(start, end, index);\n    }\n  }\n\n  onGroupEnter(start) {\n    if (this._options.onGroupEnter) {\n      this._options.onGroupEnter(start);\n    }\n  }\n\n  onGroupLeave(start, end) {\n    if (this._options.onGroupLeave) {\n      this._options.onGroupLeave(start, end);\n    }\n  }\n\n  onCapturingGroupEnter(start, name) {\n    if (this._options.onCapturingGroupEnter) {\n      this._options.onCapturingGroupEnter(start, name);\n    }\n  }\n\n  onCapturingGroupLeave(start, end, name) {\n    if (this._options.onCapturingGroupLeave) {\n      this._options.onCapturingGroupLeave(start, end, name);\n    }\n  }\n\n  onQuantifier(start, end, min, max, greedy) {\n    if (this._options.onQuantifier) {\n      this._options.onQuantifier(start, end, min, max, greedy);\n    }\n  }\n\n  onLookaroundAssertionEnter(start, kind, negate) {\n    if (this._options.onLookaroundAssertionEnter) {\n      this._options.onLookaroundAssertionEnter(start, kind, negate);\n    }\n  }\n\n  onLookaroundAssertionLeave(start, end, kind, negate) {\n    if (this._options.onLookaroundAssertionLeave) {\n      this._options.onLookaroundAssertionLeave(start, end, kind, negate);\n    }\n  }\n\n  onEdgeAssertion(start, end, kind) {\n    if (this._options.onEdgeAssertion) {\n      this._options.onEdgeAssertion(start, end, kind);\n    }\n  }\n\n  onWordBoundaryAssertion(start, end, kind, negate) {\n    if (this._options.onWordBoundaryAssertion) {\n      this._options.onWordBoundaryAssertion(start, end, kind, negate);\n    }\n  }\n\n  onAnyCharacterSet(start, end, kind) {\n    if (this._options.onAnyCharacterSet) {\n      this._options.onAnyCharacterSet(start, end, kind);\n    }\n  }\n\n  onEscapeCharacterSet(start, end, kind, negate) {\n    if (this._options.onEscapeCharacterSet) {\n      this._options.onEscapeCharacterSet(start, end, kind, negate);\n    }\n  }\n\n  onUnicodePropertyCharacterSet(start, end, kind, key, value, negate) {\n    if (this._options.onUnicodePropertyCharacterSet) {\n      this._options.onUnicodePropertyCharacterSet(start, end, kind, key, value, negate);\n    }\n  }\n\n  onCharacter(start, end, value) {\n    if (this._options.onCharacter) {\n      this._options.onCharacter(start, end, value);\n    }\n  }\n\n  onBackreference(start, end, ref) {\n    if (this._options.onBackreference) {\n      this._options.onBackreference(start, end, ref);\n    }\n  }\n\n  onCharacterClassEnter(start, negate) {\n    if (this._options.onCharacterClassEnter) {\n      this._options.onCharacterClassEnter(start, negate);\n    }\n  }\n\n  onCharacterClassLeave(start, end, negate) {\n    if (this._options.onCharacterClassLeave) {\n      this._options.onCharacterClassLeave(start, end, negate);\n    }\n  }\n\n  onCharacterClassRange(start, end, min, max) {\n    if (this._options.onCharacterClassRange) {\n      this._options.onCharacterClassRange(start, end, min, max);\n    }\n  }\n\n  get source() {\n    return this._reader.source;\n  }\n\n  get index() {\n    return this._reader.index;\n  }\n\n  get currentCodePoint() {\n    return this._reader.currentCodePoint;\n  }\n\n  get nextCodePoint() {\n    return this._reader.nextCodePoint;\n  }\n\n  get nextCodePoint2() {\n    return this._reader.nextCodePoint2;\n  }\n\n  get nextCodePoint3() {\n    return this._reader.nextCodePoint3;\n  }\n\n  reset(source, start, end) {\n    this._reader.reset(source, start, end, this._uFlag);\n  }\n\n  rewind(index) {\n    this._reader.rewind(index);\n  }\n\n  advance() {\n    this._reader.advance();\n  }\n\n  eat(cp) {\n    return this._reader.eat(cp);\n  }\n\n  eat2(cp1, cp2) {\n    return this._reader.eat2(cp1, cp2);\n  }\n\n  eat3(cp1, cp2, cp3) {\n    return this._reader.eat3(cp1, cp2, cp3);\n  }\n\n  raise(message) {\n    throw new RegExpSyntaxError(this.source, this._uFlag, this.index, message);\n  }\n\n  eatRegExpBody() {\n    const start = this.index;\n    let inClass = false;\n    let escaped = false;\n\n    for (;;) {\n      const cp = this.currentCodePoint;\n\n      if (cp === -1 || isLineTerminator(cp)) {\n        const kind = inClass ? \"character class\" : \"regular expression\";\n        this.raise(`Unterminated ${kind}`);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else if (cp === ReverseSolidus) {\n        escaped = true;\n      } else if (cp === LeftSquareBracket) {\n        inClass = true;\n      } else if (cp === RightSquareBracket) {\n        inClass = false;\n      } else if (cp === Solidus && !inClass || cp === Asterisk && this.index === start) {\n        break;\n      }\n\n      this.advance();\n    }\n\n    return this.index !== start;\n  }\n\n  consumePattern() {\n    const start = this.index;\n    this._numCapturingParens = this.countCapturingParens();\n\n    this._groupNames.clear();\n\n    this._backreferenceNames.clear();\n\n    this.onPatternEnter(start);\n    this.consumeDisjunction();\n    const cp = this.currentCodePoint;\n\n    if (this.currentCodePoint !== -1) {\n      if (cp === RightParenthesis) {\n        this.raise(\"Unmatched ')'\");\n      }\n\n      if (cp === ReverseSolidus) {\n        this.raise(\"\\\\ at end of pattern\");\n      }\n\n      if (cp === RightSquareBracket || cp === RightCurlyBracket) {\n        this.raise(\"Lone quantifier brackets\");\n      }\n\n      const c = String.fromCodePoint(cp);\n      this.raise(`Unexpected character '${c}'`);\n    }\n\n    for (const name of this._backreferenceNames) {\n      if (!this._groupNames.has(name)) {\n        this.raise(\"Invalid named capture referenced\");\n      }\n    }\n\n    this.onPatternLeave(start, this.index);\n  }\n\n  countCapturingParens() {\n    const start = this.index;\n    let inClass = false;\n    let escaped = false;\n    let count = 0;\n    let cp = 0;\n\n    while ((cp = this.currentCodePoint) !== -1) {\n      if (escaped) {\n        escaped = false;\n      } else if (cp === ReverseSolidus) {\n        escaped = true;\n      } else if (cp === LeftSquareBracket) {\n        inClass = true;\n      } else if (cp === RightSquareBracket) {\n        inClass = false;\n      } else if (cp === LeftParenthesis && !inClass && (this.nextCodePoint !== QuestionMark || this.nextCodePoint2 === LessThanSign && this.nextCodePoint3 !== EqualsSign && this.nextCodePoint3 !== ExclamationMark)) {\n        count += 1;\n      }\n\n      this.advance();\n    }\n\n    this.rewind(start);\n    return count;\n  }\n\n  consumeDisjunction() {\n    const start = this.index;\n    let i = 0;\n    this.onDisjunctionEnter(start);\n\n    do {\n      this.consumeAlternative(i++);\n    } while (this.eat(VerticalLine));\n\n    if (this.consumeQuantifier(true)) {\n      this.raise(\"Nothing to repeat\");\n    }\n\n    if (this.eat(LeftCurlyBracket)) {\n      this.raise(\"Lone quantifier brackets\");\n    }\n\n    this.onDisjunctionLeave(start, this.index);\n  }\n\n  consumeAlternative(i) {\n    const start = this.index;\n    this.onAlternativeEnter(start, i);\n\n    while (this.currentCodePoint !== -1 && this.consumeTerm()) {}\n\n    this.onAlternativeLeave(start, this.index, i);\n  }\n\n  consumeTerm() {\n    if (this._uFlag || this.strict) {\n      return this.consumeAssertion() || this.consumeAtom() && this.consumeOptionalQuantifier();\n    }\n\n    return this.consumeAssertion() && (!this._lastAssertionIsQuantifiable || this.consumeOptionalQuantifier()) || this.consumeExtendedAtom() && this.consumeOptionalQuantifier();\n  }\n\n  consumeOptionalQuantifier() {\n    this.consumeQuantifier();\n    return true;\n  }\n\n  consumeAssertion() {\n    const start = this.index;\n    this._lastAssertionIsQuantifiable = false;\n\n    if (this.eat(CircumflexAccent)) {\n      this.onEdgeAssertion(start, this.index, \"start\");\n      return true;\n    }\n\n    if (this.eat(DollarSign)) {\n      this.onEdgeAssertion(start, this.index, \"end\");\n      return true;\n    }\n\n    if (this.eat2(ReverseSolidus, LatinCapitalLetterB)) {\n      this.onWordBoundaryAssertion(start, this.index, \"word\", true);\n      return true;\n    }\n\n    if (this.eat2(ReverseSolidus, LatinSmallLetterB)) {\n      this.onWordBoundaryAssertion(start, this.index, \"word\", false);\n      return true;\n    }\n\n    if (this.eat2(LeftParenthesis, QuestionMark)) {\n      const lookbehind = this.ecmaVersion >= 2018 && this.eat(LessThanSign);\n      let negate = false;\n\n      if (this.eat(EqualsSign) || (negate = this.eat(ExclamationMark))) {\n        const kind = lookbehind ? \"lookbehind\" : \"lookahead\";\n        this.onLookaroundAssertionEnter(start, kind, negate);\n        this.consumeDisjunction();\n\n        if (!this.eat(RightParenthesis)) {\n          this.raise(\"Unterminated group\");\n        }\n\n        this._lastAssertionIsQuantifiable = !lookbehind && !this.strict;\n        this.onLookaroundAssertionLeave(start, this.index, kind, negate);\n        return true;\n      }\n\n      this.rewind(start);\n    }\n\n    return false;\n  }\n\n  consumeQuantifier() {\n    let noConsume = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const start = this.index;\n    let min = 0;\n    let max = 0;\n    let greedy = false;\n\n    if (this.eat(Asterisk)) {\n      min = 0;\n      max = Number.POSITIVE_INFINITY;\n    } else if (this.eat(PlusSign)) {\n      min = 1;\n      max = Number.POSITIVE_INFINITY;\n    } else if (this.eat(QuestionMark)) {\n      min = 0;\n      max = 1;\n    } else if (this.eatBracedQuantifier(noConsume)) {\n      min = this._lastMinValue;\n      max = this._lastMaxValue;\n    } else {\n      return false;\n    }\n\n    greedy = !this.eat(QuestionMark);\n\n    if (!noConsume) {\n      this.onQuantifier(start, this.index, min, max, greedy);\n    }\n\n    return true;\n  }\n\n  eatBracedQuantifier(noError) {\n    const start = this.index;\n\n    if (this.eat(LeftCurlyBracket)) {\n      this._lastMinValue = 0;\n      this._lastMaxValue = Number.POSITIVE_INFINITY;\n\n      if (this.eatDecimalDigits()) {\n        this._lastMinValue = this._lastMaxValue = this._lastIntValue;\n\n        if (this.eat(Comma)) {\n          this._lastMaxValue = this.eatDecimalDigits() ? this._lastIntValue : Number.POSITIVE_INFINITY;\n        }\n\n        if (this.eat(RightCurlyBracket)) {\n          if (!noError && this._lastMaxValue < this._lastMinValue) {\n            this.raise(\"numbers out of order in {} quantifier\");\n          }\n\n          return true;\n        }\n      }\n\n      if (!noError && (this._uFlag || this.strict)) {\n        this.raise(\"Incomplete quantifier\");\n      }\n\n      this.rewind(start);\n    }\n\n    return false;\n  }\n\n  consumeAtom() {\n    return this.consumePatternCharacter() || this.consumeDot() || this.consumeReverseSolidusAtomEscape() || this.consumeCharacterClass() || this.consumeUncapturingGroup() || this.consumeCapturingGroup();\n  }\n\n  consumeDot() {\n    if (this.eat(FullStop)) {\n      this.onAnyCharacterSet(this.index - 1, this.index, \"any\");\n      return true;\n    }\n\n    return false;\n  }\n\n  consumeReverseSolidusAtomEscape() {\n    const start = this.index;\n\n    if (this.eat(ReverseSolidus)) {\n      if (this.consumeAtomEscape()) {\n        return true;\n      }\n\n      this.rewind(start);\n    }\n\n    return false;\n  }\n\n  consumeUncapturingGroup() {\n    const start = this.index;\n\n    if (this.eat3(LeftParenthesis, QuestionMark, Colon)) {\n      this.onGroupEnter(start);\n      this.consumeDisjunction();\n\n      if (!this.eat(RightParenthesis)) {\n        this.raise(\"Unterminated group\");\n      }\n\n      this.onGroupLeave(start, this.index);\n      return true;\n    }\n\n    return false;\n  }\n\n  consumeCapturingGroup() {\n    const start = this.index;\n\n    if (this.eat(LeftParenthesis)) {\n      let name = null;\n\n      if (this.ecmaVersion >= 2018) {\n        if (this.consumeGroupSpecifier()) {\n          name = this._lastStrValue;\n        }\n      } else if (this.currentCodePoint === QuestionMark) {\n        this.raise(\"Invalid group\");\n      }\n\n      this.onCapturingGroupEnter(start, name);\n      this.consumeDisjunction();\n\n      if (!this.eat(RightParenthesis)) {\n        this.raise(\"Unterminated group\");\n      }\n\n      this.onCapturingGroupLeave(start, this.index, name);\n      return true;\n    }\n\n    return false;\n  }\n\n  consumeExtendedAtom() {\n    return this.consumeDot() || this.consumeReverseSolidusAtomEscape() || this.consumeReverseSolidusFollowedByC() || this.consumeCharacterClass() || this.consumeUncapturingGroup() || this.consumeCapturingGroup() || this.consumeInvalidBracedQuantifier() || this.consumeExtendedPatternCharacter();\n  }\n\n  consumeReverseSolidusFollowedByC() {\n    const start = this.index;\n\n    if (this.currentCodePoint === ReverseSolidus && this.nextCodePoint === LatinSmallLetterC) {\n      this._lastIntValue = this.currentCodePoint;\n      this.advance();\n      this.onCharacter(start, this.index, ReverseSolidus);\n      return true;\n    }\n\n    return false;\n  }\n\n  consumeInvalidBracedQuantifier() {\n    if (this.eatBracedQuantifier(true)) {\n      this.raise(\"Nothing to repeat\");\n    }\n\n    return false;\n  }\n\n  consumePatternCharacter() {\n    const start = this.index;\n    const cp = this.currentCodePoint;\n\n    if (cp !== -1 && !isSyntaxCharacter(cp)) {\n      this.advance();\n      this.onCharacter(start, this.index, cp);\n      return true;\n    }\n\n    return false;\n  }\n\n  consumeExtendedPatternCharacter() {\n    const start = this.index;\n    const cp = this.currentCodePoint;\n\n    if (cp !== -1 && cp !== CircumflexAccent && cp !== DollarSign && cp !== ReverseSolidus && cp !== FullStop && cp !== Asterisk && cp !== PlusSign && cp !== QuestionMark && cp !== LeftParenthesis && cp !== RightParenthesis && cp !== LeftSquareBracket && cp !== VerticalLine) {\n      this.advance();\n      this.onCharacter(start, this.index, cp);\n      return true;\n    }\n\n    return false;\n  }\n\n  consumeGroupSpecifier() {\n    if (this.eat(QuestionMark)) {\n      if (this.eatGroupName()) {\n        if (!this._groupNames.has(this._lastStrValue)) {\n          this._groupNames.add(this._lastStrValue);\n\n          return true;\n        }\n\n        this.raise(\"Duplicate capture group name\");\n      }\n\n      this.raise(\"Invalid group\");\n    }\n\n    return false;\n  }\n\n  consumeAtomEscape() {\n    if (this.consumeBackreference() || this.consumeCharacterClassEscape() || this.consumeCharacterEscape() || this._nFlag && this.consumeKGroupName()) {\n      return true;\n    }\n\n    if (this.strict || this._uFlag) {\n      this.raise(\"Invalid escape\");\n    }\n\n    return false;\n  }\n\n  consumeBackreference() {\n    const start = this.index;\n\n    if (this.eatDecimalEscape()) {\n      const n = this._lastIntValue;\n\n      if (n <= this._numCapturingParens) {\n        this.onBackreference(start - 1, this.index, n);\n        return true;\n      }\n\n      if (this.strict || this._uFlag) {\n        this.raise(\"Invalid escape\");\n      }\n\n      this.rewind(start);\n    }\n\n    return false;\n  }\n\n  consumeCharacterClassEscape() {\n    const start = this.index;\n\n    if (this.eat(LatinSmallLetterD)) {\n      this._lastIntValue = -1;\n      this.onEscapeCharacterSet(start - 1, this.index, \"digit\", false);\n      return true;\n    }\n\n    if (this.eat(LatinCapitalLetterD)) {\n      this._lastIntValue = -1;\n      this.onEscapeCharacterSet(start - 1, this.index, \"digit\", true);\n      return true;\n    }\n\n    if (this.eat(LatinSmallLetterS)) {\n      this._lastIntValue = -1;\n      this.onEscapeCharacterSet(start - 1, this.index, \"space\", false);\n      return true;\n    }\n\n    if (this.eat(LatinCapitalLetterS)) {\n      this._lastIntValue = -1;\n      this.onEscapeCharacterSet(start - 1, this.index, \"space\", true);\n      return true;\n    }\n\n    if (this.eat(LatinSmallLetterW)) {\n      this._lastIntValue = -1;\n      this.onEscapeCharacterSet(start - 1, this.index, \"word\", false);\n      return true;\n    }\n\n    if (this.eat(LatinCapitalLetterW)) {\n      this._lastIntValue = -1;\n      this.onEscapeCharacterSet(start - 1, this.index, \"word\", true);\n      return true;\n    }\n\n    let negate = false;\n\n    if (this._uFlag && this.ecmaVersion >= 2018 && (this.eat(LatinSmallLetterP) || (negate = this.eat(LatinCapitalLetterP)))) {\n      this._lastIntValue = -1;\n\n      if (this.eat(LeftCurlyBracket) && this.eatUnicodePropertyValueExpression() && this.eat(RightCurlyBracket)) {\n        this.onUnicodePropertyCharacterSet(start - 1, this.index, \"property\", this._lastKeyValue, this._lastValValue || null, negate);\n        return true;\n      }\n\n      this.raise(\"Invalid property name\");\n    }\n\n    return false;\n  }\n\n  consumeCharacterEscape() {\n    const start = this.index;\n\n    if (this.eatControlEscape() || this.eatCControlLetter() || this.eatZero() || this.eatHexEscapeSequence() || this.eatRegExpUnicodeEscapeSequence() || !this.strict && !this._uFlag && this.eatLegacyOctalEscapeSequence() || this.eatIdentityEscape()) {\n      this.onCharacter(start - 1, this.index, this._lastIntValue);\n      return true;\n    }\n\n    return false;\n  }\n\n  consumeKGroupName() {\n    const start = this.index;\n\n    if (this.eat(LatinSmallLetterK)) {\n      if (this.eatGroupName()) {\n        const groupName = this._lastStrValue;\n\n        this._backreferenceNames.add(groupName);\n\n        this.onBackreference(start - 1, this.index, groupName);\n        return true;\n      }\n\n      this.raise(\"Invalid named reference\");\n    }\n\n    return false;\n  }\n\n  consumeCharacterClass() {\n    const start = this.index;\n\n    if (this.eat(LeftSquareBracket)) {\n      const negate = this.eat(CircumflexAccent);\n      this.onCharacterClassEnter(start, negate);\n      this.consumeClassRanges();\n\n      if (!this.eat(RightSquareBracket)) {\n        this.raise(\"Unterminated character class\");\n      }\n\n      this.onCharacterClassLeave(start, this.index, negate);\n      return true;\n    }\n\n    return false;\n  }\n\n  consumeClassRanges() {\n    const strict = this.strict || this._uFlag;\n\n    for (;;) {\n      const rangeStart = this.index;\n\n      if (!this.consumeClassAtom()) {\n        break;\n      }\n\n      const min = this._lastIntValue;\n\n      if (!this.eat(HyphenMinus)) {\n        continue;\n      }\n\n      this.onCharacter(this.index - 1, this.index, HyphenMinus);\n\n      if (!this.consumeClassAtom()) {\n        break;\n      }\n\n      const max = this._lastIntValue;\n\n      if (min === -1 || max === -1) {\n        if (strict) {\n          this.raise(\"Invalid character class\");\n        }\n\n        continue;\n      }\n\n      if (min > max) {\n        this.raise(\"Range out of order in character class\");\n      }\n\n      this.onCharacterClassRange(rangeStart, this.index, min, max);\n    }\n  }\n\n  consumeClassAtom() {\n    const start = this.index;\n    const cp = this.currentCodePoint;\n\n    if (cp !== -1 && cp !== ReverseSolidus && cp !== RightSquareBracket) {\n      this.advance();\n      this._lastIntValue = cp;\n      this.onCharacter(start, this.index, this._lastIntValue);\n      return true;\n    }\n\n    if (this.eat(ReverseSolidus)) {\n      if (this.consumeClassEscape()) {\n        return true;\n      }\n\n      if (!this.strict && this.currentCodePoint === LatinSmallLetterC) {\n        this._lastIntValue = ReverseSolidus;\n        this.onCharacter(start, this.index, this._lastIntValue);\n        return true;\n      }\n\n      if (this.strict || this._uFlag) {\n        this.raise(\"Invalid escape\");\n      }\n\n      this.rewind(start);\n    }\n\n    return false;\n  }\n\n  consumeClassEscape() {\n    const start = this.index;\n\n    if (this.eat(LatinSmallLetterB)) {\n      this._lastIntValue = Backspace;\n      this.onCharacter(start - 1, this.index, this._lastIntValue);\n      return true;\n    }\n\n    if (this._uFlag && this.eat(HyphenMinus)) {\n      this._lastIntValue = HyphenMinus;\n      this.onCharacter(start - 1, this.index, this._lastIntValue);\n      return true;\n    }\n\n    let cp = 0;\n\n    if (!this.strict && !this._uFlag && this.currentCodePoint === LatinSmallLetterC && (isDecimalDigit(cp = this.nextCodePoint) || cp === LowLine)) {\n      this.advance();\n      this.advance();\n      this._lastIntValue = cp % 0x20;\n      this.onCharacter(start - 1, this.index, this._lastIntValue);\n      return true;\n    }\n\n    return this.consumeCharacterClassEscape() || this.consumeCharacterEscape();\n  }\n\n  eatGroupName() {\n    if (this.eat(LessThanSign)) {\n      if (this.eatRegExpIdentifierName() && this.eat(GreaterThanSign)) {\n        return true;\n      }\n\n      this.raise(\"Invalid capture group name\");\n    }\n\n    return false;\n  }\n\n  eatRegExpIdentifierName() {\n    if (this.eatRegExpIdentifierStart()) {\n      this._lastStrValue = String.fromCodePoint(this._lastIntValue);\n\n      while (this.eatRegExpIdentifierPart()) {\n        this._lastStrValue += String.fromCodePoint(this._lastIntValue);\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  eatRegExpIdentifierStart() {\n    const start = this.index;\n    const forceUFlag = !this._uFlag && this.ecmaVersion >= 2020;\n    let cp = this.currentCodePoint;\n    this.advance();\n\n    if (cp === ReverseSolidus && this.eatRegExpUnicodeEscapeSequence(forceUFlag)) {\n      cp = this._lastIntValue;\n    } else if (forceUFlag && isLeadSurrogate(cp) && isTrailSurrogate(this.currentCodePoint)) {\n      cp = combineSurrogatePair(cp, this.currentCodePoint);\n      this.advance();\n    }\n\n    if (isRegExpIdentifierStart(cp)) {\n      this._lastIntValue = cp;\n      return true;\n    }\n\n    if (this.index !== start) {\n      this.rewind(start);\n    }\n\n    return false;\n  }\n\n  eatRegExpIdentifierPart() {\n    const start = this.index;\n    const forceUFlag = !this._uFlag && this.ecmaVersion >= 2020;\n    let cp = this.currentCodePoint;\n    this.advance();\n\n    if (cp === ReverseSolidus && this.eatRegExpUnicodeEscapeSequence(forceUFlag)) {\n      cp = this._lastIntValue;\n    } else if (forceUFlag && isLeadSurrogate(cp) && isTrailSurrogate(this.currentCodePoint)) {\n      cp = combineSurrogatePair(cp, this.currentCodePoint);\n      this.advance();\n    }\n\n    if (isRegExpIdentifierPart(cp)) {\n      this._lastIntValue = cp;\n      return true;\n    }\n\n    if (this.index !== start) {\n      this.rewind(start);\n    }\n\n    return false;\n  }\n\n  eatCControlLetter() {\n    const start = this.index;\n\n    if (this.eat(LatinSmallLetterC)) {\n      if (this.eatControlLetter()) {\n        return true;\n      }\n\n      this.rewind(start);\n    }\n\n    return false;\n  }\n\n  eatZero() {\n    if (this.currentCodePoint === DigitZero && !isDecimalDigit(this.nextCodePoint)) {\n      this._lastIntValue = 0;\n      this.advance();\n      return true;\n    }\n\n    return false;\n  }\n\n  eatControlEscape() {\n    if (this.eat(LatinSmallLetterF)) {\n      this._lastIntValue = FormFeed;\n      return true;\n    }\n\n    if (this.eat(LatinSmallLetterN)) {\n      this._lastIntValue = LineFeed;\n      return true;\n    }\n\n    if (this.eat(LatinSmallLetterR)) {\n      this._lastIntValue = CarriageReturn;\n      return true;\n    }\n\n    if (this.eat(LatinSmallLetterT)) {\n      this._lastIntValue = CharacterTabulation;\n      return true;\n    }\n\n    if (this.eat(LatinSmallLetterV)) {\n      this._lastIntValue = LineTabulation;\n      return true;\n    }\n\n    return false;\n  }\n\n  eatControlLetter() {\n    const cp = this.currentCodePoint;\n\n    if (isLatinLetter(cp)) {\n      this.advance();\n      this._lastIntValue = cp % 0x20;\n      return true;\n    }\n\n    return false;\n  }\n\n  eatRegExpUnicodeEscapeSequence() {\n    let forceUFlag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const start = this.index;\n    const uFlag = forceUFlag || this._uFlag;\n\n    if (this.eat(LatinSmallLetterU)) {\n      if (uFlag && this.eatRegExpUnicodeSurrogatePairEscape() || this.eatFixedHexDigits(4) || uFlag && this.eatRegExpUnicodeCodePointEscape()) {\n        return true;\n      }\n\n      if (this.strict || uFlag) {\n        this.raise(\"Invalid unicode escape\");\n      }\n\n      this.rewind(start);\n    }\n\n    return false;\n  }\n\n  eatRegExpUnicodeSurrogatePairEscape() {\n    const start = this.index;\n\n    if (this.eatFixedHexDigits(4)) {\n      const lead = this._lastIntValue;\n\n      if (isLeadSurrogate(lead) && this.eat(ReverseSolidus) && this.eat(LatinSmallLetterU) && this.eatFixedHexDigits(4)) {\n        const trail = this._lastIntValue;\n\n        if (isTrailSurrogate(trail)) {\n          this._lastIntValue = combineSurrogatePair(lead, trail);\n          return true;\n        }\n      }\n\n      this.rewind(start);\n    }\n\n    return false;\n  }\n\n  eatRegExpUnicodeCodePointEscape() {\n    const start = this.index;\n\n    if (this.eat(LeftCurlyBracket) && this.eatHexDigits() && this.eat(RightCurlyBracket) && isValidUnicode(this._lastIntValue)) {\n      return true;\n    }\n\n    this.rewind(start);\n    return false;\n  }\n\n  eatIdentityEscape() {\n    const cp = this.currentCodePoint;\n\n    if (this.isValidIdentityEscape(cp)) {\n      this._lastIntValue = cp;\n      this.advance();\n      return true;\n    }\n\n    return false;\n  }\n\n  isValidIdentityEscape(cp) {\n    if (cp === -1) {\n      return false;\n    }\n\n    if (this._uFlag) {\n      return isSyntaxCharacter(cp) || cp === Solidus;\n    }\n\n    if (this.strict) {\n      return !isIdContinue(cp);\n    }\n\n    if (this._nFlag) {\n      return !(cp === LatinSmallLetterC || cp === LatinSmallLetterK);\n    }\n\n    return cp !== LatinSmallLetterC;\n  }\n\n  eatDecimalEscape() {\n    this._lastIntValue = 0;\n    let cp = this.currentCodePoint;\n\n    if (cp >= DigitOne && cp <= DigitNine) {\n      do {\n        this._lastIntValue = 10 * this._lastIntValue + (cp - DigitZero);\n        this.advance();\n      } while ((cp = this.currentCodePoint) >= DigitZero && cp <= DigitNine);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  eatUnicodePropertyValueExpression() {\n    const start = this.index;\n\n    if (this.eatUnicodePropertyName() && this.eat(EqualsSign)) {\n      this._lastKeyValue = this._lastStrValue;\n\n      if (this.eatUnicodePropertyValue()) {\n        this._lastValValue = this._lastStrValue;\n\n        if (isValidUnicodeProperty(this.ecmaVersion, this._lastKeyValue, this._lastValValue)) {\n          return true;\n        }\n\n        this.raise(\"Invalid property name\");\n      }\n    }\n\n    this.rewind(start);\n\n    if (this.eatLoneUnicodePropertyNameOrValue()) {\n      const nameOrValue = this._lastStrValue;\n\n      if (isValidUnicodeProperty(this.ecmaVersion, \"General_Category\", nameOrValue)) {\n        this._lastKeyValue = \"General_Category\";\n        this._lastValValue = nameOrValue;\n        return true;\n      }\n\n      if (isValidLoneUnicodeProperty(this.ecmaVersion, nameOrValue)) {\n        this._lastKeyValue = nameOrValue;\n        this._lastValValue = \"\";\n        return true;\n      }\n\n      this.raise(\"Invalid property name\");\n    }\n\n    return false;\n  }\n\n  eatUnicodePropertyName() {\n    this._lastStrValue = \"\";\n\n    while (isUnicodePropertyNameCharacter(this.currentCodePoint)) {\n      this._lastStrValue += String.fromCodePoint(this.currentCodePoint);\n      this.advance();\n    }\n\n    return this._lastStrValue !== \"\";\n  }\n\n  eatUnicodePropertyValue() {\n    this._lastStrValue = \"\";\n\n    while (isUnicodePropertyValueCharacter(this.currentCodePoint)) {\n      this._lastStrValue += String.fromCodePoint(this.currentCodePoint);\n      this.advance();\n    }\n\n    return this._lastStrValue !== \"\";\n  }\n\n  eatLoneUnicodePropertyNameOrValue() {\n    return this.eatUnicodePropertyValue();\n  }\n\n  eatHexEscapeSequence() {\n    const start = this.index;\n\n    if (this.eat(LatinSmallLetterX)) {\n      if (this.eatFixedHexDigits(2)) {\n        return true;\n      }\n\n      if (this._uFlag || this.strict) {\n        this.raise(\"Invalid escape\");\n      }\n\n      this.rewind(start);\n    }\n\n    return false;\n  }\n\n  eatDecimalDigits() {\n    const start = this.index;\n    this._lastIntValue = 0;\n\n    while (isDecimalDigit(this.currentCodePoint)) {\n      this._lastIntValue = 10 * this._lastIntValue + digitToInt(this.currentCodePoint);\n      this.advance();\n    }\n\n    return this.index !== start;\n  }\n\n  eatHexDigits() {\n    const start = this.index;\n    this._lastIntValue = 0;\n\n    while (isHexDigit(this.currentCodePoint)) {\n      this._lastIntValue = 16 * this._lastIntValue + digitToInt(this.currentCodePoint);\n      this.advance();\n    }\n\n    return this.index !== start;\n  }\n\n  eatLegacyOctalEscapeSequence() {\n    if (this.eatOctalDigit()) {\n      const n1 = this._lastIntValue;\n\n      if (this.eatOctalDigit()) {\n        const n2 = this._lastIntValue;\n\n        if (n1 <= 3 && this.eatOctalDigit()) {\n          this._lastIntValue = n1 * 64 + n2 * 8 + this._lastIntValue;\n        } else {\n          this._lastIntValue = n1 * 8 + n2;\n        }\n      } else {\n        this._lastIntValue = n1;\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  eatOctalDigit() {\n    const cp = this.currentCodePoint;\n\n    if (isOctalDigit(cp)) {\n      this.advance();\n      this._lastIntValue = cp - DigitZero;\n      return true;\n    }\n\n    this._lastIntValue = 0;\n    return false;\n  }\n\n  eatFixedHexDigits(length) {\n    const start = this.index;\n    this._lastIntValue = 0;\n\n    for (let i = 0; i < length; ++i) {\n      const cp = this.currentCodePoint;\n\n      if (!isHexDigit(cp)) {\n        this.rewind(start);\n        return false;\n      }\n\n      this._lastIntValue = 16 * this._lastIntValue + digitToInt(cp);\n      this.advance();\n    }\n\n    return true;\n  }\n\n}\n\nconst DummyPattern = {};\nconst DummyFlags = {};\nconst DummyCapturingGroup = {};\n\nclass RegExpParserState {\n  constructor(options) {\n    this._node = DummyPattern;\n    this._flags = DummyFlags;\n    this._backreferences = [];\n    this._capturingGroups = [];\n    this.source = \"\";\n    this.strict = Boolean(options && options.strict);\n    this.ecmaVersion = options && options.ecmaVersion || 2022;\n  }\n\n  get pattern() {\n    if (this._node.type !== \"Pattern\") {\n      throw new Error(\"UnknownError\");\n    }\n\n    return this._node;\n  }\n\n  get flags() {\n    if (this._flags.type !== \"Flags\") {\n      throw new Error(\"UnknownError\");\n    }\n\n    return this._flags;\n  }\n\n  onFlags(start, end, global, ignoreCase, multiline, unicode, sticky, dotAll, hasIndices) {\n    this._flags = {\n      type: \"Flags\",\n      parent: null,\n      start,\n      end,\n      raw: this.source.slice(start, end),\n      global,\n      ignoreCase,\n      multiline,\n      unicode,\n      sticky,\n      dotAll,\n      hasIndices\n    };\n  }\n\n  onPatternEnter(start) {\n    this._node = {\n      type: \"Pattern\",\n      parent: null,\n      start,\n      end: start,\n      raw: \"\",\n      alternatives: []\n    };\n    this._backreferences.length = 0;\n    this._capturingGroups.length = 0;\n  }\n\n  onPatternLeave(start, end) {\n    this._node.end = end;\n    this._node.raw = this.source.slice(start, end);\n\n    for (const reference of this._backreferences) {\n      const ref = reference.ref;\n      const group = typeof ref === \"number\" ? this._capturingGroups[ref - 1] : this._capturingGroups.find(g => g.name === ref);\n      reference.resolved = group;\n      group.references.push(reference);\n    }\n  }\n\n  onAlternativeEnter(start) {\n    const parent = this._node;\n\n    if (parent.type !== \"Assertion\" && parent.type !== \"CapturingGroup\" && parent.type !== \"Group\" && parent.type !== \"Pattern\") {\n      throw new Error(\"UnknownError\");\n    }\n\n    this._node = {\n      type: \"Alternative\",\n      parent,\n      start,\n      end: start,\n      raw: \"\",\n      elements: []\n    };\n    parent.alternatives.push(this._node);\n  }\n\n  onAlternativeLeave(start, end) {\n    const node = this._node;\n\n    if (node.type !== \"Alternative\") {\n      throw new Error(\"UnknownError\");\n    }\n\n    node.end = end;\n    node.raw = this.source.slice(start, end);\n    this._node = node.parent;\n  }\n\n  onGroupEnter(start) {\n    const parent = this._node;\n\n    if (parent.type !== \"Alternative\") {\n      throw new Error(\"UnknownError\");\n    }\n\n    this._node = {\n      type: \"Group\",\n      parent,\n      start,\n      end: start,\n      raw: \"\",\n      alternatives: []\n    };\n    parent.elements.push(this._node);\n  }\n\n  onGroupLeave(start, end) {\n    const node = this._node;\n\n    if (node.type !== \"Group\" || node.parent.type !== \"Alternative\") {\n      throw new Error(\"UnknownError\");\n    }\n\n    node.end = end;\n    node.raw = this.source.slice(start, end);\n    this._node = node.parent;\n  }\n\n  onCapturingGroupEnter(start, name) {\n    const parent = this._node;\n\n    if (parent.type !== \"Alternative\") {\n      throw new Error(\"UnknownError\");\n    }\n\n    this._node = {\n      type: \"CapturingGroup\",\n      parent,\n      start,\n      end: start,\n      raw: \"\",\n      name,\n      alternatives: [],\n      references: []\n    };\n    parent.elements.push(this._node);\n\n    this._capturingGroups.push(this._node);\n  }\n\n  onCapturingGroupLeave(start, end) {\n    const node = this._node;\n\n    if (node.type !== \"CapturingGroup\" || node.parent.type !== \"Alternative\") {\n      throw new Error(\"UnknownError\");\n    }\n\n    node.end = end;\n    node.raw = this.source.slice(start, end);\n    this._node = node.parent;\n  }\n\n  onQuantifier(start, end, min, max, greedy) {\n    const parent = this._node;\n\n    if (parent.type !== \"Alternative\") {\n      throw new Error(\"UnknownError\");\n    }\n\n    const element = parent.elements.pop();\n\n    if (element == null || element.type === \"Quantifier\" || element.type === \"Assertion\" && element.kind !== \"lookahead\") {\n      throw new Error(\"UnknownError\");\n    }\n\n    const node = {\n      type: \"Quantifier\",\n      parent,\n      start: element.start,\n      end,\n      raw: this.source.slice(element.start, end),\n      min,\n      max,\n      greedy,\n      element\n    };\n    parent.elements.push(node);\n    element.parent = node;\n  }\n\n  onLookaroundAssertionEnter(start, kind, negate) {\n    const parent = this._node;\n\n    if (parent.type !== \"Alternative\") {\n      throw new Error(\"UnknownError\");\n    }\n\n    const node = this._node = {\n      type: \"Assertion\",\n      parent,\n      start,\n      end: start,\n      raw: \"\",\n      kind,\n      negate,\n      alternatives: []\n    };\n    parent.elements.push(node);\n  }\n\n  onLookaroundAssertionLeave(start, end) {\n    const node = this._node;\n\n    if (node.type !== \"Assertion\" || node.parent.type !== \"Alternative\") {\n      throw new Error(\"UnknownError\");\n    }\n\n    node.end = end;\n    node.raw = this.source.slice(start, end);\n    this._node = node.parent;\n  }\n\n  onEdgeAssertion(start, end, kind) {\n    const parent = this._node;\n\n    if (parent.type !== \"Alternative\") {\n      throw new Error(\"UnknownError\");\n    }\n\n    parent.elements.push({\n      type: \"Assertion\",\n      parent,\n      start,\n      end,\n      raw: this.source.slice(start, end),\n      kind\n    });\n  }\n\n  onWordBoundaryAssertion(start, end, kind, negate) {\n    const parent = this._node;\n\n    if (parent.type !== \"Alternative\") {\n      throw new Error(\"UnknownError\");\n    }\n\n    parent.elements.push({\n      type: \"Assertion\",\n      parent,\n      start,\n      end,\n      raw: this.source.slice(start, end),\n      kind,\n      negate\n    });\n  }\n\n  onAnyCharacterSet(start, end, kind) {\n    const parent = this._node;\n\n    if (parent.type !== \"Alternative\") {\n      throw new Error(\"UnknownError\");\n    }\n\n    parent.elements.push({\n      type: \"CharacterSet\",\n      parent,\n      start,\n      end,\n      raw: this.source.slice(start, end),\n      kind\n    });\n  }\n\n  onEscapeCharacterSet(start, end, kind, negate) {\n    const parent = this._node;\n\n    if (parent.type !== \"Alternative\" && parent.type !== \"CharacterClass\") {\n      throw new Error(\"UnknownError\");\n    }\n\n    parent.elements.push({\n      type: \"CharacterSet\",\n      parent,\n      start,\n      end,\n      raw: this.source.slice(start, end),\n      kind,\n      negate\n    });\n  }\n\n  onUnicodePropertyCharacterSet(start, end, kind, key, value, negate) {\n    const parent = this._node;\n\n    if (parent.type !== \"Alternative\" && parent.type !== \"CharacterClass\") {\n      throw new Error(\"UnknownError\");\n    }\n\n    parent.elements.push({\n      type: \"CharacterSet\",\n      parent,\n      start,\n      end,\n      raw: this.source.slice(start, end),\n      kind,\n      key,\n      value,\n      negate\n    });\n  }\n\n  onCharacter(start, end, value) {\n    const parent = this._node;\n\n    if (parent.type !== \"Alternative\" && parent.type !== \"CharacterClass\") {\n      throw new Error(\"UnknownError\");\n    }\n\n    parent.elements.push({\n      type: \"Character\",\n      parent,\n      start,\n      end,\n      raw: this.source.slice(start, end),\n      value\n    });\n  }\n\n  onBackreference(start, end, ref) {\n    const parent = this._node;\n\n    if (parent.type !== \"Alternative\") {\n      throw new Error(\"UnknownError\");\n    }\n\n    const node = {\n      type: \"Backreference\",\n      parent,\n      start,\n      end,\n      raw: this.source.slice(start, end),\n      ref,\n      resolved: DummyCapturingGroup\n    };\n    parent.elements.push(node);\n\n    this._backreferences.push(node);\n  }\n\n  onCharacterClassEnter(start, negate) {\n    const parent = this._node;\n\n    if (parent.type !== \"Alternative\") {\n      throw new Error(\"UnknownError\");\n    }\n\n    this._node = {\n      type: \"CharacterClass\",\n      parent,\n      start,\n      end: start,\n      raw: \"\",\n      negate,\n      elements: []\n    };\n    parent.elements.push(this._node);\n  }\n\n  onCharacterClassLeave(start, end) {\n    const node = this._node;\n\n    if (node.type !== \"CharacterClass\" || node.parent.type !== \"Alternative\") {\n      throw new Error(\"UnknownError\");\n    }\n\n    node.end = end;\n    node.raw = this.source.slice(start, end);\n    this._node = node.parent;\n  }\n\n  onCharacterClassRange(start, end) {\n    const parent = this._node;\n\n    if (parent.type !== \"CharacterClass\") {\n      throw new Error(\"UnknownError\");\n    }\n\n    const elements = parent.elements;\n    const max = elements.pop();\n    const hyphen = elements.pop();\n    const min = elements.pop();\n\n    if (!min || !max || !hyphen || min.type !== \"Character\" || max.type !== \"Character\" || hyphen.type !== \"Character\" || hyphen.value !== HyphenMinus) {\n      throw new Error(\"UnknownError\");\n    }\n\n    const node = {\n      type: \"CharacterClassRange\",\n      parent,\n      start,\n      end,\n      raw: this.source.slice(start, end),\n      min,\n      max\n    };\n    min.parent = node;\n    max.parent = node;\n    elements.push(node);\n  }\n\n}\n\nclass RegExpParser {\n  constructor(options) {\n    this._state = new RegExpParserState(options);\n    this._validator = new RegExpValidator(this._state);\n  }\n\n  parseLiteral(source) {\n    let start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : source.length;\n    this._state.source = source;\n\n    this._validator.validateLiteral(source, start, end);\n\n    const pattern = this._state.pattern;\n    const flags = this._state.flags;\n    const literal = {\n      type: \"RegExpLiteral\",\n      parent: null,\n      start,\n      end,\n      raw: source,\n      pattern,\n      flags\n    };\n    pattern.parent = literal;\n    flags.parent = literal;\n    return literal;\n  }\n\n  parseFlags(source) {\n    let start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : source.length;\n    this._state.source = source;\n\n    this._validator.validateFlags(source, start, end);\n\n    return this._state.flags;\n  }\n\n  parsePattern(source) {\n    let start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : source.length;\n    let uFlag = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    this._state.source = source;\n\n    this._validator.validatePattern(source, start, end, uFlag);\n\n    return this._state.pattern;\n  }\n\n}\n\nclass RegExpVisitor {\n  constructor(handlers) {\n    this._handlers = handlers;\n  }\n\n  visit(node) {\n    switch (node.type) {\n      case \"Alternative\":\n        this.visitAlternative(node);\n        break;\n\n      case \"Assertion\":\n        this.visitAssertion(node);\n        break;\n\n      case \"Backreference\":\n        this.visitBackreference(node);\n        break;\n\n      case \"CapturingGroup\":\n        this.visitCapturingGroup(node);\n        break;\n\n      case \"Character\":\n        this.visitCharacter(node);\n        break;\n\n      case \"CharacterClass\":\n        this.visitCharacterClass(node);\n        break;\n\n      case \"CharacterClassRange\":\n        this.visitCharacterClassRange(node);\n        break;\n\n      case \"CharacterSet\":\n        this.visitCharacterSet(node);\n        break;\n\n      case \"Flags\":\n        this.visitFlags(node);\n        break;\n\n      case \"Group\":\n        this.visitGroup(node);\n        break;\n\n      case \"Pattern\":\n        this.visitPattern(node);\n        break;\n\n      case \"Quantifier\":\n        this.visitQuantifier(node);\n        break;\n\n      case \"RegExpLiteral\":\n        this.visitRegExpLiteral(node);\n        break;\n\n      default:\n        throw new Error(`Unknown type: ${node.type}`);\n    }\n  }\n\n  visitAlternative(node) {\n    if (this._handlers.onAlternativeEnter) {\n      this._handlers.onAlternativeEnter(node);\n    }\n\n    node.elements.forEach(this.visit, this);\n\n    if (this._handlers.onAlternativeLeave) {\n      this._handlers.onAlternativeLeave(node);\n    }\n  }\n\n  visitAssertion(node) {\n    if (this._handlers.onAssertionEnter) {\n      this._handlers.onAssertionEnter(node);\n    }\n\n    if (node.kind === \"lookahead\" || node.kind === \"lookbehind\") {\n      node.alternatives.forEach(this.visit, this);\n    }\n\n    if (this._handlers.onAssertionLeave) {\n      this._handlers.onAssertionLeave(node);\n    }\n  }\n\n  visitBackreference(node) {\n    if (this._handlers.onBackreferenceEnter) {\n      this._handlers.onBackreferenceEnter(node);\n    }\n\n    if (this._handlers.onBackreferenceLeave) {\n      this._handlers.onBackreferenceLeave(node);\n    }\n  }\n\n  visitCapturingGroup(node) {\n    if (this._handlers.onCapturingGroupEnter) {\n      this._handlers.onCapturingGroupEnter(node);\n    }\n\n    node.alternatives.forEach(this.visit, this);\n\n    if (this._handlers.onCapturingGroupLeave) {\n      this._handlers.onCapturingGroupLeave(node);\n    }\n  }\n\n  visitCharacter(node) {\n    if (this._handlers.onCharacterEnter) {\n      this._handlers.onCharacterEnter(node);\n    }\n\n    if (this._handlers.onCharacterLeave) {\n      this._handlers.onCharacterLeave(node);\n    }\n  }\n\n  visitCharacterClass(node) {\n    if (this._handlers.onCharacterClassEnter) {\n      this._handlers.onCharacterClassEnter(node);\n    }\n\n    node.elements.forEach(this.visit, this);\n\n    if (this._handlers.onCharacterClassLeave) {\n      this._handlers.onCharacterClassLeave(node);\n    }\n  }\n\n  visitCharacterClassRange(node) {\n    if (this._handlers.onCharacterClassRangeEnter) {\n      this._handlers.onCharacterClassRangeEnter(node);\n    }\n\n    this.visitCharacter(node.min);\n    this.visitCharacter(node.max);\n\n    if (this._handlers.onCharacterClassRangeLeave) {\n      this._handlers.onCharacterClassRangeLeave(node);\n    }\n  }\n\n  visitCharacterSet(node) {\n    if (this._handlers.onCharacterSetEnter) {\n      this._handlers.onCharacterSetEnter(node);\n    }\n\n    if (this._handlers.onCharacterSetLeave) {\n      this._handlers.onCharacterSetLeave(node);\n    }\n  }\n\n  visitFlags(node) {\n    if (this._handlers.onFlagsEnter) {\n      this._handlers.onFlagsEnter(node);\n    }\n\n    if (this._handlers.onFlagsLeave) {\n      this._handlers.onFlagsLeave(node);\n    }\n  }\n\n  visitGroup(node) {\n    if (this._handlers.onGroupEnter) {\n      this._handlers.onGroupEnter(node);\n    }\n\n    node.alternatives.forEach(this.visit, this);\n\n    if (this._handlers.onGroupLeave) {\n      this._handlers.onGroupLeave(node);\n    }\n  }\n\n  visitPattern(node) {\n    if (this._handlers.onPatternEnter) {\n      this._handlers.onPatternEnter(node);\n    }\n\n    node.alternatives.forEach(this.visit, this);\n\n    if (this._handlers.onPatternLeave) {\n      this._handlers.onPatternLeave(node);\n    }\n  }\n\n  visitQuantifier(node) {\n    if (this._handlers.onQuantifierEnter) {\n      this._handlers.onQuantifierEnter(node);\n    }\n\n    this.visit(node.element);\n\n    if (this._handlers.onQuantifierLeave) {\n      this._handlers.onQuantifierLeave(node);\n    }\n  }\n\n  visitRegExpLiteral(node) {\n    if (this._handlers.onRegExpLiteralEnter) {\n      this._handlers.onRegExpLiteralEnter(node);\n    }\n\n    this.visitPattern(node.pattern);\n    this.visitFlags(node.flags);\n\n    if (this._handlers.onRegExpLiteralLeave) {\n      this._handlers.onRegExpLiteralLeave(node);\n    }\n  }\n\n}\n\nfunction parseRegExpLiteral(source, options) {\n  return new RegExpParser(options).parseLiteral(String(source));\n}\n\nfunction validateRegExpLiteral(source, options) {\n  return new RegExpValidator(options).validateLiteral(source);\n}\n\nfunction visitRegExpAST(node, handlers) {\n  new RegExpVisitor(handlers).visit(node);\n}\n\nexports.AST = ast;\nexports.RegExpParser = RegExpParser;\nexports.RegExpValidator = RegExpValidator;\nexports.parseRegExpLiteral = parseRegExpLiteral;\nexports.validateRegExpLiteral = validateRegExpLiteral;\nexports.visitRegExpAST = visitRegExpAST;","map":{"version":3,"mappings":"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","names":["largeIdStartRanges","undefined","largeIdContinueRanges","isIdStart","cp","isLargeIdStart","isIdContinue","isLargeIdContinue","isInRange","initLargeIdStartRanges","initLargeIdContinueRanges","restoreRanges","ranges","l","r","length","i","min","max","data","last","split","map","s","parseInt","DataSet","constructor","raw2018","raw2019","raw2020","raw2021","_raw2018","_raw2019","_raw2020","_raw2021","es2018","_set2018","Set","es2019","_set2019","es2020","_set2020","es2021","_set2021","gcNameSet","scNameSet","gcValueSets","scValueSets","binPropertySets","isValidUnicodeProperty","version","name","value","has","isValidLoneUnicodeProperty","Backspace","CharacterTabulation","LineFeed","LineTabulation","FormFeed","CarriageReturn","ExclamationMark","DollarSign","LeftParenthesis","RightParenthesis","Asterisk","PlusSign","Comma","HyphenMinus","FullStop","Solidus","DigitZero","DigitOne","DigitSeven","DigitNine","Colon","LessThanSign","EqualsSign","GreaterThanSign","QuestionMark","LatinCapitalLetterA","LatinCapitalLetterB","LatinCapitalLetterD","LatinCapitalLetterF","LatinCapitalLetterP","LatinCapitalLetterS","LatinCapitalLetterW","LatinCapitalLetterZ","LowLine","LatinSmallLetterA","LatinSmallLetterB","LatinSmallLetterC","LatinSmallLetterD","LatinSmallLetterF","LatinSmallLetterG","LatinSmallLetterI","LatinSmallLetterK","LatinSmallLetterM","LatinSmallLetterN","LatinSmallLetterP","LatinSmallLetterR","LatinSmallLetterS","LatinSmallLetterT","LatinSmallLetterU","LatinSmallLetterV","LatinSmallLetterW","LatinSmallLetterX","LatinSmallLetterY","LatinSmallLetterZ","LeftSquareBracket","ReverseSolidus","RightSquareBracket","CircumflexAccent","LeftCurlyBracket","VerticalLine","RightCurlyBracket","ZeroWidthNonJoiner","ZeroWidthJoiner","LineSeparator","ParagraphSeparator","MinCodePoint","MaxCodePoint","isLatinLetter","code","isDecimalDigit","isOctalDigit","isHexDigit","isLineTerminator","isValidUnicode","digitToInt","isLeadSurrogate","isTrailSurrogate","combineSurrogatePair","lead","trail","legacyImpl","at","end","charCodeAt","width","c","unicodeImpl","codePointAt","Reader","source","_s","index","_i","currentCodePoint","_cp1","nextCodePoint","_cp2","nextCodePoint2","_cp3","nextCodePoint3","_cp4","reset","start","uFlag","_impl","_end","rewind","impl","_w1","_w2","_w3","advance","eat","eat2","cp1","cp2","eat3","cp3","RegExpSyntaxError","SyntaxError","message","startsWith","isSyntaxCharacter","isRegExpIdentifierStart","isRegExpIdentifierPart","isUnicodePropertyNameCharacter","isUnicodePropertyValueCharacter","RegExpValidator","options","_options","validateLiteral","_uFlag","_nFlag","onLiteralEnter","eatRegExpBody","flagStart","includes","validateFlags","validatePattern","raise","String","fromCodePoint","onLiteralLeave","existingFlags","global","ignoreCase","multiline","sticky","unicode","dotAll","hasIndices","flag","add","ecmaVersion","onFlags","consumePattern","_groupNames","size","strict","Boolean","onPatternEnter","onPatternLeave","onDisjunctionEnter","onDisjunctionLeave","onAlternativeEnter","onAlternativeLeave","onGroupEnter","onGroupLeave","onCapturingGroupEnter","onCapturingGroupLeave","onQuantifier","greedy","onLookaroundAssertionEnter","kind","negate","onLookaroundAssertionLeave","onEdgeAssertion","onWordBoundaryAssertion","onAnyCharacterSet","onEscapeCharacterSet","onUnicodePropertyCharacterSet","key","onCharacter","onBackreference","ref","onCharacterClassEnter","onCharacterClassLeave","onCharacterClassRange","_reader","inClass","escaped","_numCapturingParens","countCapturingParens","clear","_backreferenceNames","consumeDisjunction","count","consumeAlternative","consumeQuantifier","consumeTerm","consumeAssertion","consumeAtom","consumeOptionalQuantifier","_lastAssertionIsQuantifiable","consumeExtendedAtom","lookbehind","noConsume","Number","POSITIVE_INFINITY","eatBracedQuantifier","_lastMinValue","_lastMaxValue","noError","eatDecimalDigits","_lastIntValue","consumePatternCharacter","consumeDot","consumeReverseSolidusAtomEscape","consumeCharacterClass","consumeUncapturingGroup","consumeCapturingGroup","consumeAtomEscape","consumeGroupSpecifier","_lastStrValue","consumeReverseSolidusFollowedByC","consumeInvalidBracedQuantifier","consumeExtendedPatternCharacter","eatGroupName","consumeBackreference","consumeCharacterClassEscape","consumeCharacterEscape","consumeKGroupName","eatDecimalEscape","n","eatUnicodePropertyValueExpression","_lastKeyValue","_lastValValue","eatControlEscape","eatCControlLetter","eatZero","eatHexEscapeSequence","eatRegExpUnicodeEscapeSequence","eatLegacyOctalEscapeSequence","eatIdentityEscape","groupName","consumeClassRanges","rangeStart","consumeClassAtom","consumeClassEscape","eatRegExpIdentifierName","eatRegExpIdentifierStart","eatRegExpIdentifierPart","forceUFlag","eatControlLetter","eatRegExpUnicodeSurrogatePairEscape","eatFixedHexDigits","eatRegExpUnicodeCodePointEscape","eatHexDigits","isValidIdentityEscape","eatUnicodePropertyName","eatUnicodePropertyValue","eatLoneUnicodePropertyNameOrValue","nameOrValue","eatOctalDigit","n1","n2","DummyPattern","DummyFlags","DummyCapturingGroup","RegExpParserState","pattern","_node","type","Error","flags","_flags","parent","raw","slice","alternatives","_backreferences","_capturingGroups","reference","group","find","g","resolved","references","push","elements","node","element","pop","hyphen","RegExpParser","_state","_validator","parseLiteral","literal","parseFlags","parsePattern","RegExpVisitor","handlers","_handlers","visit","visitAlternative","visitAssertion","visitBackreference","visitCapturingGroup","visitCharacter","visitCharacterClass","visitCharacterClassRange","visitCharacterSet","visitFlags","visitGroup","visitPattern","visitQuantifier","visitRegExpLiteral","forEach","onAssertionEnter","onAssertionLeave","onBackreferenceEnter","onBackreferenceLeave","onCharacterEnter","onCharacterLeave","onCharacterClassRangeEnter","onCharacterClassRangeLeave","onCharacterSetEnter","onCharacterSetLeave","onFlagsEnter","onFlagsLeave","onQuantifierEnter","onQuantifierLeave","onRegExpLiteralEnter","onRegExpLiteralLeave","parseRegExpLiteral","validateRegExpLiteral","visitRegExpAST"],"sources":["C:\\Users\\2928\\Desktop\\zhuawa\\notes\\project_demo\\react_project\\node_modules\\regexpp\\.temp\\unicode\\src\\unicode\\ids.ts","C:\\Users\\2928\\Desktop\\zhuawa\\notes\\project_demo\\react_project\\node_modules\\regexpp\\.temp\\unicode\\src\\unicode\\properties.ts","C:\\Users\\2928\\Desktop\\zhuawa\\notes\\project_demo\\react_project\\node_modules\\regexpp\\.temp\\unicode\\src\\unicode\\index.ts","C:\\Users\\2928\\Desktop\\zhuawa\\notes\\project_demo\\react_project\\node_modules\\regexpp\\.temp\\src\\reader.ts","C:\\Users\\2928\\Desktop\\zhuawa\\notes\\project_demo\\react_project\\node_modules\\regexpp\\.temp\\src\\regexp-syntax-error.ts","C:\\Users\\2928\\Desktop\\zhuawa\\notes\\project_demo\\react_project\\node_modules\\regexpp\\.temp\\src\\validator.ts","C:\\Users\\2928\\Desktop\\zhuawa\\notes\\project_demo\\react_project\\node_modules\\regexpp\\.temp\\src\\parser.ts","C:\\Users\\2928\\Desktop\\zhuawa\\notes\\project_demo\\react_project\\node_modules\\regexpp\\.temp\\src\\visitor.ts","C:\\Users\\2928\\Desktop\\zhuawa\\notes\\project_demo\\react_project\\node_modules\\regexpp\\.temp\\src\\index.ts"],"sourcesContent":[{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\t-nagashima.MSS\\dev\\regexpp\\.temp\\unicode\\src\\unicode\\ids.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\t-nagashima.MSS\\dev\\regexpp\\.temp\\unicode\\src\\unicode\\properties.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\t-nagashima.MSS\\dev\\regexpp\\.temp\\unicode\\src\\unicode\\index.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\t-nagashima.MSS\\dev\\regexpp\\.temp\\src\\reader.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\t-nagashima.MSS\\dev\\regexpp\\.temp\\src\\regexp-syntax-error.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\t-nagashima.MSS\\dev\\regexpp\\.temp\\src\\validator.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\t-nagashima.MSS\\dev\\regexpp\\.temp\\src\\parser.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\t-nagashima.MSS\\dev\\regexpp\\.temp\\src\\visitor.ts"},{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\t-nagashima.MSS\\dev\\regexpp\\.temp\\src\\index.ts"}]},"metadata":{},"sourceType":"script"}