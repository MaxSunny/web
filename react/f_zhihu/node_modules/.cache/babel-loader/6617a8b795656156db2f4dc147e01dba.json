{"ast":null,"code":"/**\r\n * @fileoverview Rule to check for properties whose identifier ends with the string Sync\r\n * @author Matt DuVall<http://mattduvall.com/>\r\n * @deprecated in ESLint v7.0.0\r\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\n\nmodule.exports = {\n  meta: {\n    deprecated: true,\n    replacedBy: [],\n    type: \"suggestion\",\n    docs: {\n      description: \"disallow synchronous methods\",\n      recommended: false,\n      url: \"https://eslint.org/docs/rules/no-sync\"\n    },\n    schema: [{\n      type: \"object\",\n      properties: {\n        allowAtRootLevel: {\n          type: \"boolean\",\n          default: false\n        }\n      },\n      additionalProperties: false\n    }],\n    messages: {\n      noSync: \"Unexpected sync method: '{{propertyName}}'.\"\n    }\n  },\n\n  create(context) {\n    const selector = context.options[0] && context.options[0].allowAtRootLevel ? \":function MemberExpression[property.name=/.*Sync$/]\" : \"MemberExpression[property.name=/.*Sync$/]\";\n    return {\n      [selector](node) {\n        context.report({\n          node,\n          messageId: \"noSync\",\n          data: {\n            propertyName: node.property.name\n          }\n        });\n      }\n\n    };\n  }\n\n};","map":{"version":3,"sources":["C:/Users/2928/Desktop/zhuawa/notes/project_demo/react_project/node_modules/eslint/lib/rules/no-sync.js"],"names":["module","exports","meta","deprecated","replacedBy","type","docs","description","recommended","url","schema","properties","allowAtRootLevel","default","additionalProperties","messages","noSync","create","context","selector","options","node","report","messageId","data","propertyName","property","name"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA,a,CAEA;AACA;AACA;;AAEA;;AACAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAE,IADV;AAGFC,IAAAA,UAAU,EAAE,EAHV;AAKFC,IAAAA,IAAI,EAAE,YALJ;AAOFC,IAAAA,IAAI,EAAE;AACFC,MAAAA,WAAW,EAAE,8BADX;AAEFC,MAAAA,WAAW,EAAE,KAFX;AAGFC,MAAAA,GAAG,EAAE;AAHH,KAPJ;AAaFC,IAAAA,MAAM,EAAE,CACJ;AACIL,MAAAA,IAAI,EAAE,QADV;AAEIM,MAAAA,UAAU,EAAE;AACRC,QAAAA,gBAAgB,EAAE;AACdP,UAAAA,IAAI,EAAE,SADQ;AAEdQ,UAAAA,OAAO,EAAE;AAFK;AADV,OAFhB;AAQIC,MAAAA,oBAAoB,EAAE;AAR1B,KADI,CAbN;AA0BFC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,MAAM,EAAE;AADF;AA1BR,GADO;;AAgCbC,EAAAA,MAAM,CAACC,OAAD,EAAU;AACZ,UAAMC,QAAQ,GAAGD,OAAO,CAACE,OAAR,CAAgB,CAAhB,KAAsBF,OAAO,CAACE,OAAR,CAAgB,CAAhB,EAAmBR,gBAAzC,GACX,qDADW,GAEX,2CAFN;AAIA,WAAO;AACH,OAACO,QAAD,EAAWE,IAAX,EAAiB;AACbH,QAAAA,OAAO,CAACI,MAAR,CAAe;AACXD,UAAAA,IADW;AAEXE,UAAAA,SAAS,EAAE,QAFA;AAGXC,UAAAA,IAAI,EAAE;AACFC,YAAAA,YAAY,EAAEJ,IAAI,CAACK,QAAL,CAAcC;AAD1B;AAHK,SAAf;AAOH;;AATE,KAAP;AAYH;;AAjDY,CAAjB","sourcesContent":["/**\r\n * @fileoverview Rule to check for properties whose identifier ends with the string Sync\r\n * @author Matt DuVall<http://mattduvall.com/>\r\n * @deprecated in ESLint v7.0.0\r\n */\r\n\r\n\"use strict\";\r\n\r\n//------------------------------------------------------------------------------\r\n// Rule Definition\r\n//------------------------------------------------------------------------------\r\n\r\n/** @type {import('../shared/types').Rule} */\r\nmodule.exports = {\r\n    meta: {\r\n        deprecated: true,\r\n\r\n        replacedBy: [],\r\n\r\n        type: \"suggestion\",\r\n\r\n        docs: {\r\n            description: \"disallow synchronous methods\",\r\n            recommended: false,\r\n            url: \"https://eslint.org/docs/rules/no-sync\"\r\n        },\r\n\r\n        schema: [\r\n            {\r\n                type: \"object\",\r\n                properties: {\r\n                    allowAtRootLevel: {\r\n                        type: \"boolean\",\r\n                        default: false\r\n                    }\r\n                },\r\n                additionalProperties: false\r\n            }\r\n        ],\r\n\r\n        messages: {\r\n            noSync: \"Unexpected sync method: '{{propertyName}}'.\"\r\n        }\r\n    },\r\n\r\n    create(context) {\r\n        const selector = context.options[0] && context.options[0].allowAtRootLevel\r\n            ? \":function MemberExpression[property.name=/.*Sync$/]\"\r\n            : \"MemberExpression[property.name=/.*Sync$/]\";\r\n\r\n        return {\r\n            [selector](node) {\r\n                context.report({\r\n                    node,\r\n                    messageId: \"noSync\",\r\n                    data: {\r\n                        propertyName: node.property.name\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}