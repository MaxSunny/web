{"ast":null,"code":"/**\r\n * @fileoverview Rule to flag the use of empty character classes in regular expressions\r\n * @author Ian Christian Myers\r\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\n/*\r\n * plain-English description of the following regexp:\r\n * 0. `^` fix the match at the beginning of the string\r\n * 1. `([^\\\\[]|\\\\.|\\[([^\\\\\\]]|\\\\.)+\\])*`: regexp contents; 0 or more of the following\r\n * 1.0. `[^\\\\[]`: any character that's not a `\\` or a `[` (anything but escape sequences and character classes)\r\n * 1.1. `\\\\.`: an escape sequence\r\n * 1.2. `\\[([^\\\\\\]]|\\\\.)+\\]`: a character class that isn't empty\r\n * 2. `$`: fix the match at the end of the string\r\n */\n\nconst regex = /^([^\\\\[]|\\\\.|\\[([^\\\\\\]]|\\\\.)+\\])*$/u; //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\n\nmodule.exports = {\n  meta: {\n    type: \"problem\",\n    docs: {\n      description: \"disallow empty character classes in regular expressions\",\n      recommended: true,\n      url: \"https://eslint.org/docs/rules/no-empty-character-class\"\n    },\n    schema: [],\n    messages: {\n      unexpected: \"Empty class.\"\n    }\n  },\n\n  create(context) {\n    return {\n      \"Literal[regex]\"(node) {\n        if (!regex.test(node.regex.pattern)) {\n          context.report({\n            node,\n            messageId: \"unexpected\"\n          });\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"sources":["C:/Users/2928/Desktop/zhuawa/notes/project_demo/react_project/node_modules/eslint/lib/rules/no-empty-character-class.js"],"names":["regex","module","exports","meta","type","docs","description","recommended","url","schema","messages","unexpected","create","context","node","test","pattern","report","messageId"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,a,CAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMA,KAAK,GAAG,qCAAd,C,CAEA;AACA;AACA;;AAEA;;AACAC,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE,SADJ;AAGFC,IAAAA,IAAI,EAAE;AACFC,MAAAA,WAAW,EAAE,yDADX;AAEFC,MAAAA,WAAW,EAAE,IAFX;AAGFC,MAAAA,GAAG,EAAE;AAHH,KAHJ;AASFC,IAAAA,MAAM,EAAE,EATN;AAWFC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,UAAU,EAAE;AADN;AAXR,GADO;;AAiBbC,EAAAA,MAAM,CAACC,OAAD,EAAU;AACZ,WAAO;AACH,uBAAiBC,IAAjB,EAAuB;AACnB,YAAI,CAACd,KAAK,CAACe,IAAN,CAAWD,IAAI,CAACd,KAAL,CAAWgB,OAAtB,CAAL,EAAqC;AACjCH,UAAAA,OAAO,CAACI,MAAR,CAAe;AAAEH,YAAAA,IAAF;AAAQI,YAAAA,SAAS,EAAE;AAAnB,WAAf;AACH;AACJ;;AALE,KAAP;AAQH;;AA1BY,CAAjB","sourcesContent":["/**\r\n * @fileoverview Rule to flag the use of empty character classes in regular expressions\r\n * @author Ian Christian Myers\r\n */\r\n\r\n\"use strict\";\r\n\r\n//------------------------------------------------------------------------------\r\n// Helpers\r\n//------------------------------------------------------------------------------\r\n\r\n/*\r\n * plain-English description of the following regexp:\r\n * 0. `^` fix the match at the beginning of the string\r\n * 1. `([^\\\\[]|\\\\.|\\[([^\\\\\\]]|\\\\.)+\\])*`: regexp contents; 0 or more of the following\r\n * 1.0. `[^\\\\[]`: any character that's not a `\\` or a `[` (anything but escape sequences and character classes)\r\n * 1.1. `\\\\.`: an escape sequence\r\n * 1.2. `\\[([^\\\\\\]]|\\\\.)+\\]`: a character class that isn't empty\r\n * 2. `$`: fix the match at the end of the string\r\n */\r\nconst regex = /^([^\\\\[]|\\\\.|\\[([^\\\\\\]]|\\\\.)+\\])*$/u;\r\n\r\n//------------------------------------------------------------------------------\r\n// Rule Definition\r\n//------------------------------------------------------------------------------\r\n\r\n/** @type {import('../shared/types').Rule} */\r\nmodule.exports = {\r\n    meta: {\r\n        type: \"problem\",\r\n\r\n        docs: {\r\n            description: \"disallow empty character classes in regular expressions\",\r\n            recommended: true,\r\n            url: \"https://eslint.org/docs/rules/no-empty-character-class\"\r\n        },\r\n\r\n        schema: [],\r\n\r\n        messages: {\r\n            unexpected: \"Empty class.\"\r\n        }\r\n    },\r\n\r\n    create(context) {\r\n        return {\r\n            \"Literal[regex]\"(node) {\r\n                if (!regex.test(node.regex.pattern)) {\r\n                    context.report({ node, messageId: \"unexpected\" });\r\n                }\r\n            }\r\n        };\r\n\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}