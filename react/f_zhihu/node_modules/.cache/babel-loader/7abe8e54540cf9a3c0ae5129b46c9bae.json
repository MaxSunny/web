{"ast":null,"code":"/**\r\n * @fileoverview Disallow sparse arrays\r\n * @author Nicholas C. Zakas\r\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\n\nmodule.exports = {\n  meta: {\n    type: \"problem\",\n    docs: {\n      description: \"disallow sparse arrays\",\n      recommended: true,\n      url: \"https://eslint.org/docs/rules/no-sparse-arrays\"\n    },\n    schema: [],\n    messages: {\n      unexpectedSparseArray: \"Unexpected comma in middle of array.\"\n    }\n  },\n\n  create(context) {\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n    return {\n      ArrayExpression(node) {\n        const emptySpot = node.elements.indexOf(null) > -1;\n\n        if (emptySpot) {\n          context.report({\n            node,\n            messageId: \"unexpectedSparseArray\"\n          });\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"sources":["C:/Users/2928/Desktop/zhuawa/notes/project_demo/react_project/node_modules/eslint/lib/rules/no-sparse-arrays.js"],"names":["module","exports","meta","type","docs","description","recommended","url","schema","messages","unexpectedSparseArray","create","context","ArrayExpression","node","emptySpot","elements","indexOf","report","messageId"],"mappings":"AAAA;AACA;AACA;AACA;AACA,a,CAEA;AACA;AACA;;AAEA;;AACAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE,SADJ;AAGFC,IAAAA,IAAI,EAAE;AACFC,MAAAA,WAAW,EAAE,wBADX;AAEFC,MAAAA,WAAW,EAAE,IAFX;AAGFC,MAAAA,GAAG,EAAE;AAHH,KAHJ;AASFC,IAAAA,MAAM,EAAE,EATN;AAWFC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,qBAAqB,EAAE;AADjB;AAXR,GADO;;AAiBbC,EAAAA,MAAM,CAACC,OAAD,EAAU;AAGZ;AACA;AACA;AAEA,WAAO;AAEHC,MAAAA,eAAe,CAACC,IAAD,EAAO;AAElB,cAAMC,SAAS,GAAGD,IAAI,CAACE,QAAL,CAAcC,OAAd,CAAsB,IAAtB,IAA8B,CAAC,CAAjD;;AAEA,YAAIF,SAAJ,EAAe;AACXH,UAAAA,OAAO,CAACM,MAAR,CAAe;AAAEJ,YAAAA,IAAF;AAAQK,YAAAA,SAAS,EAAE;AAAnB,WAAf;AACH;AACJ;;AATE,KAAP;AAaH;;AArCY,CAAjB","sourcesContent":["/**\r\n * @fileoverview Disallow sparse arrays\r\n * @author Nicholas C. Zakas\r\n */\r\n\"use strict\";\r\n\r\n//------------------------------------------------------------------------------\r\n// Rule Definition\r\n//------------------------------------------------------------------------------\r\n\r\n/** @type {import('../shared/types').Rule} */\r\nmodule.exports = {\r\n    meta: {\r\n        type: \"problem\",\r\n\r\n        docs: {\r\n            description: \"disallow sparse arrays\",\r\n            recommended: true,\r\n            url: \"https://eslint.org/docs/rules/no-sparse-arrays\"\r\n        },\r\n\r\n        schema: [],\r\n\r\n        messages: {\r\n            unexpectedSparseArray: \"Unexpected comma in middle of array.\"\r\n        }\r\n    },\r\n\r\n    create(context) {\r\n\r\n\r\n        //--------------------------------------------------------------------------\r\n        // Public\r\n        //--------------------------------------------------------------------------\r\n\r\n        return {\r\n\r\n            ArrayExpression(node) {\r\n\r\n                const emptySpot = node.elements.indexOf(null) > -1;\r\n\r\n                if (emptySpot) {\r\n                    context.report({ node, messageId: \"unexpectedSparseArray\" });\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}