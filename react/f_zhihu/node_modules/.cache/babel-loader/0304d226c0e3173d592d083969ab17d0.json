{"ast":null,"code":"/**\r\n * @fileoverview Define the cursor which iterates tokens only.\r\n * @author Toru Nagashima\r\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nconst Cursor = require(\"./cursor\");\n\nconst utils = require(\"./utils\"); //------------------------------------------------------------------------------\n// Exports\n//------------------------------------------------------------------------------\n\n/**\r\n * The cursor which iterates tokens only.\r\n */\n\n\nmodule.exports = class ForwardTokenCursor extends Cursor {\n  /**\r\n   * Initializes this cursor.\r\n   * @param {Token[]} tokens The array of tokens.\r\n   * @param {Comment[]} comments The array of comments.\r\n   * @param {Object} indexMap The map from locations to indices in `tokens`.\r\n   * @param {number} startLoc The start location of the iteration range.\r\n   * @param {number} endLoc The end location of the iteration range.\r\n   */\n  constructor(tokens, comments, indexMap, startLoc, endLoc) {\n    super();\n    this.tokens = tokens;\n    this.index = utils.getFirstIndex(tokens, indexMap, startLoc);\n    this.indexEnd = utils.getLastIndex(tokens, indexMap, endLoc);\n  }\n  /** @inheritdoc */\n\n\n  moveNext() {\n    if (this.index <= this.indexEnd) {\n      this.current = this.tokens[this.index];\n      this.index += 1;\n      return true;\n    }\n\n    return false;\n  }\n  /*\r\n   *\r\n   * Shorthand for performance.\r\n   *\r\n   */\n\n  /** @inheritdoc */\n\n\n  getOneToken() {\n    return this.index <= this.indexEnd ? this.tokens[this.index] : null;\n  }\n  /** @inheritdoc */\n\n\n  getAllTokens() {\n    return this.tokens.slice(this.index, this.indexEnd + 1);\n  }\n\n};","map":{"version":3,"sources":["C:/Users/2928/Desktop/zhuawa/notes/project_demo/react_project/node_modules/eslint/lib/source-code/token-store/forward-token-cursor.js"],"names":["Cursor","require","utils","module","exports","ForwardTokenCursor","constructor","tokens","comments","indexMap","startLoc","endLoc","index","getFirstIndex","indexEnd","getLastIndex","moveNext","current","getOneToken","getAllTokens","slice"],"mappings":"AAAA;AACA;AACA;AACA;AACA,a,CAEA;AACA;AACA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAArB,C,CAEA;AACA;AACA;;AAEA;AACA;AACA;;;AACAE,MAAM,CAACC,OAAP,GAAiB,MAAMC,kBAAN,SAAiCL,MAAjC,CAAwC;AAErD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIM,EAAAA,WAAW,CAACC,MAAD,EAASC,QAAT,EAAmBC,QAAnB,EAA6BC,QAA7B,EAAuCC,MAAvC,EAA+C;AACtD;AACA,SAAKJ,MAAL,GAAcA,MAAd;AACA,SAAKK,KAAL,GAAaV,KAAK,CAACW,aAAN,CAAoBN,MAApB,EAA4BE,QAA5B,EAAsCC,QAAtC,CAAb;AACA,SAAKI,QAAL,GAAgBZ,KAAK,CAACa,YAAN,CAAmBR,MAAnB,EAA2BE,QAA3B,EAAqCE,MAArC,CAAhB;AACH;AAED;;;AACAK,EAAAA,QAAQ,GAAG;AACP,QAAI,KAAKJ,KAAL,IAAc,KAAKE,QAAvB,EAAiC;AAC7B,WAAKG,OAAL,GAAe,KAAKV,MAAL,CAAY,KAAKK,KAAjB,CAAf;AACA,WAAKA,KAAL,IAAc,CAAd;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH;AAED;AACJ;AACA;AACA;AACA;;AAEI;;;AACAM,EAAAA,WAAW,GAAG;AACV,WAAQ,KAAKN,KAAL,IAAc,KAAKE,QAApB,GAAgC,KAAKP,MAAL,CAAY,KAAKK,KAAjB,CAAhC,GAA0D,IAAjE;AACH;AAED;;;AACAO,EAAAA,YAAY,GAAG;AACX,WAAO,KAAKZ,MAAL,CAAYa,KAAZ,CAAkB,KAAKR,KAAvB,EAA8B,KAAKE,QAAL,GAAgB,CAA9C,CAAP;AACH;;AAzCoD,CAAzD","sourcesContent":["/**\r\n * @fileoverview Define the cursor which iterates tokens only.\r\n * @author Toru Nagashima\r\n */\r\n\"use strict\";\r\n\r\n//------------------------------------------------------------------------------\r\n// Requirements\r\n//------------------------------------------------------------------------------\r\n\r\nconst Cursor = require(\"./cursor\");\r\nconst utils = require(\"./utils\");\r\n\r\n//------------------------------------------------------------------------------\r\n// Exports\r\n//------------------------------------------------------------------------------\r\n\r\n/**\r\n * The cursor which iterates tokens only.\r\n */\r\nmodule.exports = class ForwardTokenCursor extends Cursor {\r\n\r\n    /**\r\n     * Initializes this cursor.\r\n     * @param {Token[]} tokens The array of tokens.\r\n     * @param {Comment[]} comments The array of comments.\r\n     * @param {Object} indexMap The map from locations to indices in `tokens`.\r\n     * @param {number} startLoc The start location of the iteration range.\r\n     * @param {number} endLoc The end location of the iteration range.\r\n     */\r\n    constructor(tokens, comments, indexMap, startLoc, endLoc) {\r\n        super();\r\n        this.tokens = tokens;\r\n        this.index = utils.getFirstIndex(tokens, indexMap, startLoc);\r\n        this.indexEnd = utils.getLastIndex(tokens, indexMap, endLoc);\r\n    }\r\n\r\n    /** @inheritdoc */\r\n    moveNext() {\r\n        if (this.index <= this.indexEnd) {\r\n            this.current = this.tokens[this.index];\r\n            this.index += 1;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /*\r\n     *\r\n     * Shorthand for performance.\r\n     *\r\n     */\r\n\r\n    /** @inheritdoc */\r\n    getOneToken() {\r\n        return (this.index <= this.indexEnd) ? this.tokens[this.index] : null;\r\n    }\r\n\r\n    /** @inheritdoc */\r\n    getAllTokens() {\r\n        return this.tokens.slice(this.index, this.indexEnd + 1);\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}