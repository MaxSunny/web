{"ast":null,"code":"/**\r\n * @fileoverview Rule to flag statements with function invocation preceded by\r\n * \"new\" and not part of assignment\r\n * @author Ilya Volodin\r\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\n\nmodule.exports = {\n  meta: {\n    type: \"suggestion\",\n    docs: {\n      description: \"disallow `new` operators outside of assignments or comparisons\",\n      recommended: false,\n      url: \"https://eslint.org/docs/rules/no-new\"\n    },\n    schema: [],\n    messages: {\n      noNewStatement: \"Do not use 'new' for side effects.\"\n    }\n  },\n\n  create(context) {\n    return {\n      \"ExpressionStatement > NewExpression\"(node) {\n        context.report({\n          node: node.parent,\n          messageId: \"noNewStatement\"\n        });\n      }\n\n    };\n  }\n\n};","map":{"version":3,"sources":["C:/Users/2928/Desktop/zhuawa/notes/project_demo/react_project/node_modules/eslint/lib/rules/no-new.js"],"names":["module","exports","meta","type","docs","description","recommended","url","schema","messages","noNewStatement","create","context","node","report","parent","messageId"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA,a,CAEA;AACA;AACA;;AAEA;;AACAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE,YADJ;AAGFC,IAAAA,IAAI,EAAE;AACFC,MAAAA,WAAW,EAAE,gEADX;AAEFC,MAAAA,WAAW,EAAE,KAFX;AAGFC,MAAAA,GAAG,EAAE;AAHH,KAHJ;AASFC,IAAAA,MAAM,EAAE,EATN;AAWFC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,cAAc,EAAE;AADV;AAXR,GADO;;AAiBbC,EAAAA,MAAM,CAACC,OAAD,EAAU;AAEZ,WAAO;AACH,4CAAsCC,IAAtC,EAA4C;AACxCD,QAAAA,OAAO,CAACE,MAAR,CAAe;AACXD,UAAAA,IAAI,EAAEA,IAAI,CAACE,MADA;AAEXC,UAAAA,SAAS,EAAE;AAFA,SAAf;AAIH;;AANE,KAAP;AASH;;AA5BY,CAAjB","sourcesContent":["/**\r\n * @fileoverview Rule to flag statements with function invocation preceded by\r\n * \"new\" and not part of assignment\r\n * @author Ilya Volodin\r\n */\r\n\r\n\"use strict\";\r\n\r\n//------------------------------------------------------------------------------\r\n// Rule Definition\r\n//------------------------------------------------------------------------------\r\n\r\n/** @type {import('../shared/types').Rule} */\r\nmodule.exports = {\r\n    meta: {\r\n        type: \"suggestion\",\r\n\r\n        docs: {\r\n            description: \"disallow `new` operators outside of assignments or comparisons\",\r\n            recommended: false,\r\n            url: \"https://eslint.org/docs/rules/no-new\"\r\n        },\r\n\r\n        schema: [],\r\n\r\n        messages: {\r\n            noNewStatement: \"Do not use 'new' for side effects.\"\r\n        }\r\n    },\r\n\r\n    create(context) {\r\n\r\n        return {\r\n            \"ExpressionStatement > NewExpression\"(node) {\r\n                context.report({\r\n                    node: node.parent,\r\n                    messageId: \"noNewStatement\"\r\n                });\r\n            }\r\n        };\r\n\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}