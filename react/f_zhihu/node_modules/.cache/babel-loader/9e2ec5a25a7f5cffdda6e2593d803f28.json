{"ast":null,"code":"/**\r\n * @author Toru Nagashima <https://github.com/mysticatea>\r\n */\n\"use strict\";\n/**\r\n * Check whether a given character is a combining mark or not.\r\n * @param {number} codePoint The character code to check.\r\n * @returns {boolean} `true` if the character belongs to the category, any of `Mc`, `Me`, and `Mn`.\r\n */\n\nmodule.exports = function isCombiningCharacter(codePoint) {\n  return /^[\\p{Mc}\\p{Me}\\p{Mn}]$/u.test(String.fromCodePoint(codePoint));\n};","map":{"version":3,"sources":["C:/Users/2928/Desktop/zhuawa/notes/project_demo/react_project/node_modules/eslint/lib/rules/utils/unicode/is-combining-character.js"],"names":["module","exports","isCombiningCharacter","codePoint","test","String","fromCodePoint"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,oBAAT,CAA8BC,SAA9B,EAAyC;AACtD,SAAO,0BAA0BC,IAA1B,CAA+BC,MAAM,CAACC,aAAP,CAAqBH,SAArB,CAA/B,CAAP;AACH,CAFD","sourcesContent":["/**\r\n * @author Toru Nagashima <https://github.com/mysticatea>\r\n */\r\n\"use strict\";\r\n\r\n/**\r\n * Check whether a given character is a combining mark or not.\r\n * @param {number} codePoint The character code to check.\r\n * @returns {boolean} `true` if the character belongs to the category, any of `Mc`, `Me`, and `Mn`.\r\n */\r\nmodule.exports = function isCombiningCharacter(codePoint) {\r\n    return /^[\\p{Mc}\\p{Me}\\p{Mn}]$/u.test(String.fromCodePoint(codePoint));\r\n};\r\n"]},"metadata":{},"sourceType":"script"}