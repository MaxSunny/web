{"ast":null,"code":"/*\r\n * @version    1.4.0\r\n * @date       2015-10-26\r\n * @stability  3 - Stable\r\n * @author     Lauri Rooden (https://github.com/litejs/natural-compare-lite)\r\n * @license    MIT License\r\n */\nvar naturalCompare = function (a, b) {\n  var i,\n      codeA,\n      codeB = 1,\n      posA = 0,\n      posB = 0,\n      alphabet = String.alphabet;\n\n  function getCode(str, pos, code) {\n    if (code) {\n      for (i = pos; code = getCode(str, i), code < 76 && code > 65;) ++i;\n\n      return +str.slice(pos - 1, i);\n    }\n\n    code = alphabet && alphabet.indexOf(str.charAt(pos));\n    return code > -1 ? code + 76 : (code = str.charCodeAt(pos) || 0, code < 45 || code > 127) ? code : code < 46 ? 65 // -\n    : code < 48 ? code - 1 : code < 58 ? code + 18 // 0-9\n    : code < 65 ? code - 11 : code < 91 ? code + 11 // A-Z\n    : code < 97 ? code - 37 : code < 123 ? code + 5 // a-z\n    : code - 63;\n  }\n\n  if ((a += \"\") != (b += \"\")) for (; codeB;) {\n    codeA = getCode(a, posA++);\n    codeB = getCode(b, posB++);\n\n    if (codeA < 76 && codeB < 76 && codeA > 66 && codeB > 66) {\n      codeA = getCode(a, posA, posA);\n      codeB = getCode(b, posB, posA = i);\n      posB = i;\n    }\n\n    if (codeA != codeB) return codeA < codeB ? -1 : 1;\n  }\n  return 0;\n};\n\ntry {\n  module.exports = naturalCompare;\n} catch (e) {\n  String.naturalCompare = naturalCompare;\n}","map":{"version":3,"sources":["C:/Users/2928/Desktop/zhuawa/notes/project_demo/react_project/node_modules/natural-compare/index.js"],"names":["naturalCompare","a","b","i","codeA","codeB","posA","posB","alphabet","String","getCode","str","pos","code","slice","indexOf","charAt","charCodeAt","module","exports","e"],"mappings":"AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,IAAIA,cAAc,GAAG,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACnC,MAAIC,CAAJ;AAAA,MAAOC,KAAP;AAAA,MACEC,KAAK,GAAG,CADV;AAAA,MAEEC,IAAI,GAAG,CAFT;AAAA,MAGEC,IAAI,GAAG,CAHT;AAAA,MAIEC,QAAQ,GAAGC,MAAM,CAACD,QAJpB;;AAMA,WAASE,OAAT,CAAiBC,GAAjB,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiC;AAChC,QAAIA,IAAJ,EAAU;AACT,WAAKV,CAAC,GAAGS,GAAT,EAAcC,IAAI,GAAGH,OAAO,CAACC,GAAD,EAAMR,CAAN,CAAd,EAAwBU,IAAI,GAAG,EAAP,IAAaA,IAAI,GAAG,EAA1D,GAA+D,EAAEV,CAAF;;AAC/D,aAAO,CAACQ,GAAG,CAACG,KAAJ,CAAUF,GAAG,GAAG,CAAhB,EAAmBT,CAAnB,CAAR;AACA;;AACDU,IAAAA,IAAI,GAAGL,QAAQ,IAAIA,QAAQ,CAACO,OAAT,CAAiBJ,GAAG,CAACK,MAAJ,CAAWJ,GAAX,CAAjB,CAAnB;AACA,WAAOC,IAAI,GAAG,CAAC,CAAR,GAAYA,IAAI,GAAG,EAAnB,GAAwB,CAAEA,IAAI,GAAGF,GAAG,CAACM,UAAJ,CAAeL,GAAf,KAAuB,CAA/B,EAAmCC,IAAI,GAAG,EAAP,IAAaA,IAAI,GAAG,GAAxD,IAA+DA,IAA/D,GAC5BA,IAAI,GAAG,EAAP,GAAY,EAAZ,CAA6B;AAA7B,MACAA,IAAI,GAAG,EAAP,GAAYA,IAAI,GAAG,CAAnB,GACAA,IAAI,GAAG,EAAP,GAAYA,IAAI,GAAG,EAAnB,CAA6B;AAA7B,MACAA,IAAI,GAAG,EAAP,GAAYA,IAAI,GAAG,EAAnB,GACAA,IAAI,GAAG,EAAP,GAAYA,IAAI,GAAG,EAAnB,CAA6B;AAA7B,MACAA,IAAI,GAAG,EAAP,GAAYA,IAAI,GAAG,EAAnB,GACAA,IAAI,GAAG,GAAP,GAAaA,IAAI,GAAG,CAApB,CAA6B;AAA7B,MACAA,IAAI,GAAG,EARV;AASA;;AAGD,MAAI,CAACZ,CAAC,IAAE,EAAJ,MAAYC,CAAC,IAAE,EAAf,CAAJ,EAAwB,OAAMG,KAAN,GAAc;AACrCD,IAAAA,KAAK,GAAGM,OAAO,CAACT,CAAD,EAAIK,IAAI,EAAR,CAAf;AACAD,IAAAA,KAAK,GAAGK,OAAO,CAACR,CAAD,EAAIK,IAAI,EAAR,CAAf;;AAEA,QAAIH,KAAK,GAAG,EAAR,IAAcC,KAAK,GAAG,EAAtB,IAA4BD,KAAK,GAAG,EAApC,IAA0CC,KAAK,GAAG,EAAtD,EAA0D;AACzDD,MAAAA,KAAK,GAAGM,OAAO,CAACT,CAAD,EAAIK,IAAJ,EAAUA,IAAV,CAAf;AACAD,MAAAA,KAAK,GAAGK,OAAO,CAACR,CAAD,EAAIK,IAAJ,EAAUD,IAAI,GAAGH,CAAjB,CAAf;AACAI,MAAAA,IAAI,GAAGJ,CAAP;AACA;;AAED,QAAIC,KAAK,IAAIC,KAAb,EAAoB,OAAQD,KAAK,GAAGC,KAAT,GAAkB,CAAC,CAAnB,GAAuB,CAA9B;AACpB;AACD,SAAO,CAAP;AACA,CAtCD;;AAwCA,IAAI;AACHa,EAAAA,MAAM,CAACC,OAAP,GAAiBnB,cAAjB;AACA,CAFD,CAEE,OAAOoB,CAAP,EAAU;AACXX,EAAAA,MAAM,CAACT,cAAP,GAAwBA,cAAxB;AACA","sourcesContent":["\r\n\r\n\r\n/*\r\n * @version    1.4.0\r\n * @date       2015-10-26\r\n * @stability  3 - Stable\r\n * @author     Lauri Rooden (https://github.com/litejs/natural-compare-lite)\r\n * @license    MIT License\r\n */\r\n\r\n\r\nvar naturalCompare = function(a, b) {\r\n\tvar i, codeA\r\n\t, codeB = 1\r\n\t, posA = 0\r\n\t, posB = 0\r\n\t, alphabet = String.alphabet\r\n\r\n\tfunction getCode(str, pos, code) {\r\n\t\tif (code) {\r\n\t\t\tfor (i = pos; code = getCode(str, i), code < 76 && code > 65;) ++i;\r\n\t\t\treturn +str.slice(pos - 1, i)\r\n\t\t}\r\n\t\tcode = alphabet && alphabet.indexOf(str.charAt(pos))\r\n\t\treturn code > -1 ? code + 76 : ((code = str.charCodeAt(pos) || 0), code < 45 || code > 127) ? code\r\n\t\t\t: code < 46 ? 65               // -\r\n\t\t\t: code < 48 ? code - 1\r\n\t\t\t: code < 58 ? code + 18        // 0-9\r\n\t\t\t: code < 65 ? code - 11\r\n\t\t\t: code < 91 ? code + 11        // A-Z\r\n\t\t\t: code < 97 ? code - 37\r\n\t\t\t: code < 123 ? code + 5        // a-z\r\n\t\t\t: code - 63\r\n\t}\r\n\r\n\r\n\tif ((a+=\"\") != (b+=\"\")) for (;codeB;) {\r\n\t\tcodeA = getCode(a, posA++)\r\n\t\tcodeB = getCode(b, posB++)\r\n\r\n\t\tif (codeA < 76 && codeB < 76 && codeA > 66 && codeB > 66) {\r\n\t\t\tcodeA = getCode(a, posA, posA)\r\n\t\t\tcodeB = getCode(b, posB, posA = i)\r\n\t\t\tposB = i\r\n\t\t}\r\n\r\n\t\tif (codeA != codeB) return (codeA < codeB) ? -1 : 1\r\n\t}\r\n\treturn 0\r\n}\r\n\r\ntry {\r\n\tmodule.exports = naturalCompare;\r\n} catch (e) {\r\n\tString.naturalCompare = naturalCompare;\r\n}\r\n"]},"metadata":{},"sourceType":"script"}