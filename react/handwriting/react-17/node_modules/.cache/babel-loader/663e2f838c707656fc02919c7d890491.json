{"ast":null,"code":"import { NODE_FLAG } from \"./react\";\nimport { patchProps } from \"./update\";\nexport function mount(vnode, container, refNode) {\n  if (!container) throw new Error('container 不存在');\n  const $$ = vnode.$$;\n\n  if ($$.flag & NODE_FLAG.TEXT) {\n    //if a text node , direct create\n    const staticNode = document.createTextNode(vnode.props.nodeValue);\n    vnode.staticNode = staticNode;\n    container.appendChild(staticNode);\n  } else if ($$.flag & NODE_FLAG.EL) {\n    //if a element,(not component)\n    const {\n      type,\n      props\n    } = vnode;\n    const staticNode = document.createElement(type);\n    vnode.staticNode = staticNode; //deal children and others\n\n    const {\n      children,\n      ...rest\n    } = props;\n\n    if (Object.keys(rest).length) {\n      for (let [key, value] of Object.entries(rest)) {\n        // \n        patchProps(key, null, value, staticNode);\n      }\n    }\n\n    if (children) {\n      const kids = children instanceof Array ? children : [children];\n\n      for (let kid of kids) {\n        mount(kid, staticNode);\n      }\n    }\n\n    refNode ? container.insertBefore(staticNode, refNode) : container.appendChild(staticNode);\n  }\n}","map":{"version":3,"sources":["/Users/only/Desktop/文件/web0930  1210-1211/react-17/src/react/mount.js"],"names":["NODE_FLAG","patchProps","mount","vnode","container","refNode","Error","$$","flag","TEXT","staticNode","document","createTextNode","props","nodeValue","appendChild","EL","type","createElement","children","rest","Object","keys","length","key","value","entries","kids","Array","kid","insertBefore"],"mappings":"AAAA,SAASA,SAAT,QAA0B,SAA1B;AACA,SAASC,UAAT,QAA2B,UAA3B;AAEA,OAAO,SAASC,KAAT,CAAeC,KAAf,EAAqBC,SAArB,EAA+BC,OAA/B,EAAuC;AAC1C,MAAG,CAACD,SAAJ,EAAe,MAAM,IAAIE,KAAJ,CAAU,eAAV,CAAN;AACf,QAAMC,EAAE,GAAGJ,KAAK,CAACI,EAAjB;;AACA,MAAGA,EAAE,CAACC,IAAH,GAAUR,SAAS,CAACS,IAAvB,EAA4B;AACxB;AACA,UAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwBT,KAAK,CAACU,KAAN,CAAYC,SAApC,CAAnB;AACAX,IAAAA,KAAK,CAACO,UAAN,GAAmBA,UAAnB;AACAN,IAAAA,SAAS,CAACW,WAAV,CAAsBL,UAAtB;AACH,GALD,MAKM,IAAIH,EAAE,CAACC,IAAH,GAAUR,SAAS,CAACgB,EAAxB,EAA2B;AAC7B;AACA,UAAM;AAACC,MAAAA,IAAD;AAAMJ,MAAAA;AAAN,QAAeV,KAArB;AACA,UAAMO,UAAU,GAAGC,QAAQ,CAACO,aAAT,CAAuBD,IAAvB,CAAnB;AACAd,IAAAA,KAAK,CAACO,UAAN,GAAmBA,UAAnB,CAJ6B,CAK7B;;AACA,UAAM;AAACS,MAAAA,QAAD;AAAU,SAAGC;AAAb,QAAqBP,KAA3B;;AACA,QAAGQ,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkBG,MAArB,EAA4B;AACxB,WAAI,IAAI,CAACC,GAAD,EAAKC,KAAL,CAAR,IAAuBJ,MAAM,CAACK,OAAP,CAAeN,IAAf,CAAvB,EAA4C;AACxC;AACAnB,QAAAA,UAAU,CAACuB,GAAD,EAAK,IAAL,EAAUC,KAAV,EAAgBf,UAAhB,CAAV;AACH;AACJ;;AACD,QAAGS,QAAH,EAAY;AACR,YAAMQ,IAAI,GAAGR,QAAQ,YAAYS,KAApB,GAA0BT,QAA1B,GAAmC,CAACA,QAAD,CAAhD;;AACA,WAAI,IAAIU,GAAR,IAAeF,IAAf,EAAoB;AAChBzB,QAAAA,KAAK,CAAC2B,GAAD,EAAKnB,UAAL,CAAL;AACH;AACJ;;AACDL,IAAAA,OAAO,GAAGD,SAAS,CAAC0B,YAAV,CAAuBpB,UAAvB,EAAkCL,OAAlC,CAAH,GAA8CD,SAAS,CAACW,WAAV,CAAsBL,UAAtB,CAArD;AACH;AACJ","sourcesContent":["import { NODE_FLAG } from \"./react\";\nimport { patchProps } from \"./update\";\n\nexport function mount(vnode,container,refNode){\n    if(!container) throw new Error('container 不存在');\n    const $$ = vnode.$$;\n    if($$.flag & NODE_FLAG.TEXT){\n        //if a text node , direct create\n        const staticNode = document.createTextNode(vnode.props.nodeValue);\n        vnode.staticNode = staticNode;\n        container.appendChild(staticNode);\n    }else if ($$.flag & NODE_FLAG.EL){\n        //if a element,(not component)\n        const {type,props} = vnode;\n        const staticNode = document.createElement(type);\n        vnode.staticNode = staticNode;\n        //deal children and others\n        const {children,...rest} = props;\n        if(Object.keys(rest).length){\n            for(let [key,value] of Object.entries(rest)){\n                // \n                patchProps(key,null,value,staticNode)\n            }\n        }\n        if(children){\n            const kids = children instanceof Array?children:[children];\n            for(let kid of kids){\n                mount(kid,staticNode);\n            }\n        }\n        refNode ? container.insertBefore(staticNode,refNode):container.appendChild(staticNode);\n    }\n}"]},"metadata":{},"sourceType":"module"}